<शैली गुरु>
#अगर_अघोषित __BYTEORDER_H
#घोषणा __BYTEORDER_H

#समावेश "types.h" // u32

अटल अंतरभूत u16 __swab16_स्थिरant(u16 val) अणु
    वापस (val<<8) | (val>>8);
पूर्ण
अटल अंतरभूत u32 __swab32_स्थिरant(u32 val) अणु
    वापस (val<<24) | ((val&0xff00)<<8) | ((val&0xff0000)>>8) | (val>>24);
पूर्ण
अटल अंतरभूत u64 __swab64_स्थिरant(u64 val) अणु
    वापस ((u64)__swab32_स्थिरant(val) << 32) | __swab32_स्थिरant(val>>32);
पूर्ण
अटल अंतरभूत u32 __swab32(u32 val) अणु
    यंत्र("bswapl %0" : "+r"(val));
    वापस val;
पूर्ण
अटल अंतरभूत u64 __swab64(u64 val) अणु
    जोड़ u64_u32_u i, o;
    i.val = val;
    o.lo = __swab32(i.hi);
    o.hi = __swab32(i.lo);
    वापस o.val;
पूर्ण

#घोषणा swab16(x) __swab16_स्थिरant(x)
#घोषणा swab32(x) (__builtin_स्थिरant_p((u32)(x)) \
                   ? __swab32_स्थिरant(x) : __swab32(x))
#घोषणा swab64(x) (__builtin_स्थिरant_p((u64)(x)) \
                   ? __swab64_स्थिरant(x) : __swab64(x))

अटल अंतरभूत u16 cpu_to_le16(u16 x) अणु
    वापस x;
पूर्ण
अटल अंतरभूत u32 cpu_to_le32(u32 x) अणु
    वापस x;
पूर्ण
अटल अंतरभूत u64 cpu_to_le64(u64 x) अणु
    वापस x;
पूर्ण
अटल अंतरभूत u16 le16_to_cpu(u16 x) अणु
    वापस x;
पूर्ण
अटल अंतरभूत u32 le32_to_cpu(u32 x) अणु
    वापस x;
पूर्ण
अटल अंतरभूत u64 le64_to_cpu(u64 x) अणु
    वापस x;
पूर्ण

अटल अंतरभूत u16 cpu_to_be16(u16 x) अणु
    वापस swab16(x);
पूर्ण
अटल अंतरभूत u32 cpu_to_be32(u32 x) अणु
    वापस swab32(x);
पूर्ण
अटल अंतरभूत u64 cpu_to_be64(u64 x) अणु
    वापस swab64(x);
पूर्ण
अटल अंतरभूत u16 be16_to_cpu(u16 x) अणु
    वापस swab16(x);
पूर्ण
अटल अंतरभूत u32 be32_to_cpu(u32 x) अणु
    वापस swab32(x);
पूर्ण
अटल अंतरभूत u64 be64_to_cpu(u64 x) अणु
    वापस swab64(x);
पूर्ण

#पूर्ण_अगर // byteorder.h
