<शैली गुरु>
// Code क्रम handling USB Mass Storage Controller devices.
//
// Copyright (C) 2010  Kevin O'Connor <kevin@koconnor.net>
//
// This file may be distributed under the terms of the GNU LGPLv3 license.

#समावेश "biosvar.h" // GET_GLOBALFLAT
#समावेश "block.h" // DTYPE_USB
#समावेश "blockcmd.h" // cdb_पढ़ो
#समावेश "config.h" // CONFIG_USB_MSC
#समावेश "malloc.h" // मुक्त
#समावेश "output.h" // dम_लिखो
#समावेश "std/disk.h" // DISK_RET_SUCCESS
#समावेश "string.h" // स_रखो
#समावेश "usb.h" // काष्ठा usb_s
#समावेश "usb-msc.h" // usb_msc_setup
#समावेश "util.h" // bootprio_find_usb

काष्ठा usbdrive_s अणु
    काष्ठा drive_s drive;
    काष्ठा usb_pipe *bulkin, *bulkout;
    पूर्णांक lun;
पूर्ण;


/****************************************************************
 * Bulk-only drive command processing
 ****************************************************************/

#घोषणा USB_CDB_SIZE 12

#घोषणा CBW_SIGNATURE 0x43425355 // USBC

काष्ठा cbw_s अणु
    u32 dCBWSignature;
    u32 dCBWTag;
    u32 dCBWDataTransferLength;
    u8 bmCBWFlags;
    u8 bCBWLUN;
    u8 bCBWCBLength;
    u8 CBWCB[16];
पूर्ण PACKED;

#घोषणा CSW_SIGNATURE 0x53425355 // USBS

काष्ठा csw_s अणु
    u32 dCSWSignature;
    u32 dCSWTag;
    u32 dCSWDataResidue;
    u8 bCSWStatus;
पूर्ण PACKED;

अटल पूर्णांक
usb_msc_send(काष्ठा usbdrive_s *udrive_gf, पूर्णांक dir, व्योम *buf, u32 bytes)
अणु
    काष्ठा usb_pipe *pipe;
    अगर (dir == USB_सूची_OUT)
        pipe = GET_GLOBALFLAT(udrive_gf->bulkout);
    अन्यथा
        pipe = GET_GLOBALFLAT(udrive_gf->bulkin);
    वापस usb_send_bulk(pipe, dir, buf, bytes);
पूर्ण

// Low-level usb command transmit function.
पूर्णांक
usb_process_op(काष्ठा disk_op_s *op)
अणु
    अगर (!CONFIG_USB_MSC)
        वापस 0;

    dम_लिखो(16, "usb_cmd_data id=%p write=%d count=%d buf=%p\n"
            , op->drive_fl, 0, op->count, op->buf_fl);
    काष्ठा usbdrive_s *udrive_gf = container_of(
        op->drive_fl, काष्ठा usbdrive_s, drive);

    // Setup command block wrapper.
    काष्ठा cbw_s cbw;
    स_रखो(&cbw, 0, माप(cbw));
    पूर्णांक blocksize = scsi_fill_cmd(op, cbw.CBWCB, USB_CDB_SIZE);
    अगर (blocksize < 0)
        वापस शेष_process_op(op);
    u32 bytes = blocksize * op->count;
    cbw.dCBWSignature = CBW_SIGNATURE;
    cbw.dCBWTag = 999; // XXX
    cbw.dCBWDataTransferLength = bytes;
    cbw.bmCBWFlags = scsi_is_पढ़ो(op) ? USB_सूची_IN : USB_सूची_OUT;
    cbw.bCBWLUN = GET_GLOBALFLAT(udrive_gf->lun);
    cbw.bCBWCBLength = USB_CDB_SIZE;

    // Transfer cbw to device.
    पूर्णांक ret = usb_msc_send(udrive_gf, USB_सूची_OUT
                           , MAKE_FLATPTR(GET_SEG(SS), &cbw), माप(cbw));
    अगर (ret)
        जाओ fail;

    // Transfer data to/from device.
    अगर (bytes) अणु
        ret = usb_msc_send(udrive_gf, cbw.bmCBWFlags, op->buf_fl, bytes);
        अगर (ret)
            जाओ fail;
    पूर्ण

    // Transfer csw info.
    काष्ठा csw_s csw;
    ret = usb_msc_send(udrive_gf, USB_सूची_IN
                       , MAKE_FLATPTR(GET_SEG(SS), &csw), माप(csw));
    अगर (ret)
        जाओ fail;

    अगर (!csw.bCSWStatus)
        वापस DISK_RET_SUCCESS;
    अगर (csw.bCSWStatus == 2)
        जाओ fail;

    अगर (blocksize)
        op->count -= csw.dCSWDataResidue / blocksize;
    वापस DISK_RET_EBADTRACK;

fail:
    // XXX - reset connection
    dम_लिखो(1, "USB transmission failed\n");
    वापस DISK_RET_EBADTRACK;
पूर्ण

अटल पूर्णांक
usb_msc_maxlun(काष्ठा usb_pipe *pipe)
अणु
    काष्ठा usb_ctrlrequest req;
    req.bRequestType = USB_सूची_IN | USB_TYPE_CLASS | USB_RECIP_INTERFACE;
    req.bRequest = 0xfe;
    req.wValue = 0;
    req.wIndex = 0;
    req.wLength = 1;
    अचिन्हित अक्षर maxlun;
    पूर्णांक ret = usb_send_शेष_control(pipe, &req, &maxlun);
    अगर (ret)
        वापस 0;
    वापस maxlun;
पूर्ण

अटल पूर्णांक
usb_msc_lun_setup(काष्ठा usb_pipe *inpipe, काष्ठा usb_pipe *outpipe,
                  काष्ठा usbdevice_s *usbdev, पूर्णांक lun)
अणु
    // Allocate drive काष्ठाure.
    काष्ठा usbdrive_s *drive = दो_स्मृति_fseg(माप(*drive));
    अगर (!drive) अणु
        warn_noalloc();
        वापस -1;
    पूर्ण
    स_रखो(drive, 0, माप(*drive));
    अगर (usb_32bit_pipe(inpipe))
        drive->drive.type = DTYPE_USB_32;
    अन्यथा
        drive->drive.type = DTYPE_USB;
    drive->bulkin = inpipe;
    drive->bulkout = outpipe;
    drive->lun = lun;

    पूर्णांक prio = bootprio_find_usb(usbdev, lun);
    पूर्णांक ret = scsi_drive_setup(&drive->drive, "USB MSC", prio);
    अगर (ret) अणु
        dम_लिखो(1, "Unable to configure USB MSC drive.\n");
        मुक्त(drive);
        वापस -1;
    पूर्ण
    वापस 0;
पूर्ण

/****************************************************************
 * Setup
 ****************************************************************/

// Configure a usb msc device.
पूर्णांक
usb_msc_setup(काष्ठा usbdevice_s *usbdev)
अणु
    अगर (!CONFIG_USB_MSC)
        वापस -1;

    // Verअगरy right kind of device
    काष्ठा usb_पूर्णांकerface_descriptor *अगरace = usbdev->अगरace;
    अगर ((अगरace->bInterfaceSubClass != US_SC_SCSI &&
         अगरace->bInterfaceSubClass != US_SC_ATAPI_8070 &&
         अगरace->bInterfaceSubClass != US_SC_ATAPI_8020)
        || अगरace->bInterfaceProtocol != US_PR_BULK) अणु
        dम_लिखो(1, "Unsupported MSC USB device (subclass=%02x proto=%02x)\n"
                , अगरace->bInterfaceSubClass, अगरace->bInterfaceProtocol);
        वापस -1;
    पूर्ण

    // Find bulk in and bulk out endpoपूर्णांकs.
    काष्ठा usb_pipe *inpipe = शून्य, *outpipe = शून्य;
    काष्ठा usb_endpoपूर्णांक_descriptor *indesc = usb_find_desc(
        usbdev, USB_ENDPOINT_XFER_BULK, USB_सूची_IN);
    काष्ठा usb_endpoपूर्णांक_descriptor *outdesc = usb_find_desc(
        usbdev, USB_ENDPOINT_XFER_BULK, USB_सूची_OUT);
    अगर (!indesc || !outdesc)
        जाओ fail;
    inpipe = usb_alloc_pipe(usbdev, indesc);
    outpipe = usb_alloc_pipe(usbdev, outdesc);
    अगर (!inpipe || !outpipe)
        जाओ fail;

    पूर्णांक maxlun = usb_msc_maxlun(usbdev->defpipe);
    पूर्णांक lun, pipesused = 0;
    क्रम (lun = 0; lun < maxlun + 1; lun++) अणु
        पूर्णांक ret = usb_msc_lun_setup(inpipe, outpipe, usbdev, lun);
        अगर (!ret)
            pipesused = 1;
    पूर्ण

    अगर (!pipesused)
        जाओ fail;

    वापस 0;
fail:
    dम_लिखो(1, "Unable to configure USB MSC device.\n");
    usb_मुक्त_pipe(usbdev, inpipe);
    usb_मुक्त_pipe(usbdev, outpipe);
    वापस -1;
पूर्ण
