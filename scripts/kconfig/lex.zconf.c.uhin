<शैली गुरु>

#पंक्ति 3 "scripts/kconfig/lex.zconf.c"

#घोषणा  YY_INT_ALIGNED लघु पूर्णांक

/* A lexical scanner generated by flex */

#घोषणा yy_create_buffer zconf_create_buffer
#घोषणा yy_delete_buffer zconf_delete_buffer
#घोषणा yy_flex_debug zconf_flex_debug
#घोषणा yy_init_buffer zconf_init_buffer
#घोषणा yy_flush_buffer zconf_flush_buffer
#घोषणा yy_load_buffer_state zconf_load_buffer_state
#घोषणा yy_चयन_to_buffer zconf_चयन_to_buffer
#घोषणा yyin zconfin
#घोषणा yyleng zconfleng
#घोषणा yylex zconflex
#घोषणा yylineno zconflineno
#घोषणा yyout zconfout
#घोषणा yyrestart zconfrestart
#घोषणा yytext zconftext
#घोषणा yywrap zconfwrap
#घोषणा yyalloc zconfalloc
#घोषणा yyपुनः_स्मृति zconfपुनः_स्मृति
#घोषणा yyमुक्त zconfमुक्त

#घोषणा FLEX_SCANNER
#घोषणा YY_FLEX_MAJOR_VERSION 2
#घोषणा YY_FLEX_MINOR_VERSION 5
#घोषणा YY_FLEX_SUBMINOR_VERSION 35
#अगर YY_FLEX_SUBMINOR_VERSION > 0
#घोषणा FLEX_BETA
#पूर्ण_अगर

/* First, we deal with  platक्रमm-specअगरic or compiler-specअगरic issues. */

/* begin standard C headers. */
#समावेश <मानकपन.स>
#समावेश <माला.स>
#समावेश <त्रुटिसं.स>
#समावेश <मानककोष.स>

/* end standard C headers. */

/* flex पूर्णांकeger type definitions */

#अगर_अघोषित FLEXINT_H
#घोषणा FLEXINT_H

/* C99 प्रणालीs have <पूर्णांकtypes.h>. Non-C99 प्रणालीs may or may not. */

#अगर defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L

/* C99 says to define __STDC_LIMIT_MACROS beक्रमe including मानक_निवेशt.h,
 * अगर you want the limit (max/min) macros क्रम पूर्णांक types. 
 */
#अगर_अघोषित __STDC_LIMIT_MACROS
#घोषणा __STDC_LIMIT_MACROS 1
#पूर्ण_अगर

#समावेश <पूर्णांकtypes.h>
प्रकार पूर्णांक8_t flex_पूर्णांक8_t;
प्रकार uपूर्णांक8_t flex_uपूर्णांक8_t;
प्रकार पूर्णांक16_t flex_पूर्णांक16_t;
प्रकार uपूर्णांक16_t flex_uपूर्णांक16_t;
प्रकार पूर्णांक32_t flex_पूर्णांक32_t;
प्रकार uपूर्णांक32_t flex_uपूर्णांक32_t;
#अन्यथा
प्रकार चिन्हित अक्षर flex_पूर्णांक8_t;
प्रकार लघु पूर्णांक flex_पूर्णांक16_t;
प्रकार पूर्णांक flex_पूर्णांक32_t;
प्रकार अचिन्हित अक्षर flex_uपूर्णांक8_t; 
प्रकार अचिन्हित लघु पूर्णांक flex_uपूर्णांक16_t;
प्रकार अचिन्हित पूर्णांक flex_uपूर्णांक32_t;

/* Limits of पूर्णांकegral types. */
#अगर_अघोषित INT8_MIN
#घोषणा INT8_MIN               (-128)
#पूर्ण_अगर
#अगर_अघोषित INT16_MIN
#घोषणा INT16_MIN              (-32767-1)
#पूर्ण_अगर
#अगर_अघोषित INT32_MIN
#घोषणा INT32_MIN              (-2147483647-1)
#पूर्ण_अगर
#अगर_अघोषित INT8_MAX
#घोषणा INT8_MAX               (127)
#पूर्ण_अगर
#अगर_अघोषित INT16_MAX
#घोषणा INT16_MAX              (32767)
#पूर्ण_अगर
#अगर_अघोषित INT32_MAX
#घोषणा INT32_MAX              (2147483647)
#पूर्ण_अगर
#अगर_अघोषित UINT8_MAX
#घोषणा UINT8_MAX              (255U)
#पूर्ण_अगर
#अगर_अघोषित UINT16_MAX
#घोषणा UINT16_MAX             (65535U)
#पूर्ण_अगर
#अगर_अघोषित UINT32_MAX
#घोषणा UINT32_MAX             (4294967295U)
#पूर्ण_अगर

#पूर्ण_अगर /* ! C99 */

#पूर्ण_अगर /* ! FLEXINT_H */

#अगर_घोषित __cplusplus

/* The "const" storage-class-modअगरier is valid. */
#घोषणा YY_USE_CONST

#अन्यथा	/* ! __cplusplus */

/* C99 requires __STDC__ to be defined as 1. */
#अगर defined (__STDC__)

#घोषणा YY_USE_CONST

#पूर्ण_अगर	/* defined (__STDC__) */
#पूर्ण_अगर	/* ! __cplusplus */

#अगर_घोषित YY_USE_CONST
#घोषणा yyस्थिर स्थिर
#अन्यथा
#घोषणा yyस्थिर
#पूर्ण_अगर

/* Returned upon end-of-file. */
#घोषणा YY_शून्य 0

/* Promotes a possibly negative, possibly चिन्हित अक्षर to an अचिन्हित
 * पूर्णांकeger क्रम use as an array index.  If the चिन्हित अक्षर is negative,
 * we want to instead treat it as an 8-bit अचिन्हित अक्षर, hence the
 * द्विगुन cast.
 */
#घोषणा YY_SC_TO_UI(c) ((अचिन्हित पूर्णांक) (अचिन्हित अक्षर) c)

/* Enter a start condition.  This macro really ought to take a parameter,
 * but we करो it the disgusting crufty way क्रमced on us by the ()-less
 * definition of BEGIN.
 */
#घोषणा BEGIN (yy_start) = 1 + 2 *

/* Translate the current start state पूर्णांकo a value that can be later handed
 * to BEGIN to वापस to the state.  The YYSTATE alias is क्रम lex
 * compatibility.
 */
#घोषणा YY_START (((yy_start) - 1) / 2)
#घोषणा YYSTATE YY_START

/* Action number क्रम खातापूर्ण rule of a given start state. */
#घोषणा YY_STATE_खातापूर्ण(state) (YY_END_OF_BUFFER + state + 1)

/* Special action meaning "start processing a new file". */
#घोषणा YY_NEW_खाता zconfrestart(zconfin  )

#घोषणा YY_END_OF_BUFFER_CHAR 0

/* Size of शेष input buffer. */
#अगर_अघोषित YY_BUF_SIZE
#अगर_घोषित __ia64__
/* On IA-64, the buffer size is 16k, not 8k.
 * Moreover, YY_BUF_SIZE is 2*YY_READ_BUF_SIZE in the general हाल.
 * Ditto क्रम the __ia64__ हाल accordingly.
 */
#घोषणा YY_BUF_SIZE 32768
#अन्यथा
#घोषणा YY_BUF_SIZE 16384
#पूर्ण_अगर /* __ia64__ */
#पूर्ण_अगर

/* The state buf must be large enough to hold one state per अक्षरacter in the मुख्य buffer.
 */
#घोषणा YY_STATE_BUF_SIZE   ((YY_BUF_SIZE + 2) * माप(yy_state_type))

#अगर_अघोषित YY_TYPEDEF_YY_BUFFER_STATE
#घोषणा YY_TYPEDEF_YY_BUFFER_STATE
प्रकार काष्ठा yy_buffer_state *YY_BUFFER_STATE;
#पूर्ण_अगर

बाह्य पूर्णांक zconfleng;

बाह्य खाता *zconfin, *zconfout;

#घोषणा EOB_ACT_CONTINUE_SCAN 0
#घोषणा EOB_ACT_END_OF_खाता 1
#घोषणा EOB_ACT_LAST_MATCH 2

    #घोषणा YY_LESS_LINENO(n)
    
/* Return all but the first "n" matched अक्षरacters back to the input stream. */
#घोषणा yyless(n) \
	करो \
		अणु \
		/* Unकरो effects of setting up zconftext. */ \
        पूर्णांक yyless_macro_arg = (n); \
        YY_LESS_LINENO(yyless_macro_arg);\
		*yy_cp = (yy_hold_अक्षर); \
		YY_RESTORE_YY_MORE_OFFSET \
		(yy_c_buf_p) = yy_cp = yy_bp + yyless_macro_arg - YY_MORE_ADJ; \
		YY_DO_BEFORE_ACTION; /* set up zconftext again */ \
		पूर्ण \
	जबतक ( 0 )

#घोषणा unput(c) yyunput( c, (yytext_ptr)  )

#अगर_अघोषित YY_TYPEDEF_YY_SIZE_T
#घोषणा YY_TYPEDEF_YY_SIZE_T
प्रकार माप_प्रकार yy_माप_प्रकार;
#पूर्ण_अगर

#अगर_अघोषित YY_STRUCT_YY_BUFFER_STATE
#घोषणा YY_STRUCT_YY_BUFFER_STATE
काष्ठा yy_buffer_state
	अणु
	खाता *yy_input_file;

	अक्षर *yy_ch_buf;		/* input buffer */
	अक्षर *yy_buf_pos;		/* current position in input buffer */

	/* Size of input buffer in bytes, not including room क्रम EOB
	 * अक्षरacters.
	 */
	yy_माप_प्रकार yy_buf_size;

	/* Number of अक्षरacters पढ़ो पूर्णांकo yy_ch_buf, not including EOB
	 * अक्षरacters.
	 */
	पूर्णांक yy_n_अक्षरs;

	/* Whether we "own" the buffer - i.e., we know we created it,
	 * and can पुनः_स्मृति() it to grow it, and should मुक्त() it to
	 * delete it.
	 */
	पूर्णांक yy_is_our_buffer;

	/* Whether this is an "interactive" input source; अगर so, and
	 * अगर we're using stdio क्रम input, then we want to use अ_लो()
	 * instead of ख_पढ़ो(), to make sure we stop fetching input after
	 * each newline.
	 */
	पूर्णांक yy_is_पूर्णांकeractive;

	/* Whether we're considered to be at the beginning of a line.
	 * If so, '^' rules will be active on the next match, otherwise
	 * not.
	 */
	पूर्णांक yy_at_bol;

    पूर्णांक yy_bs_lineno; /**< The line count. */
    पूर्णांक yy_bs_column; /**< The column count. */
    
	/* Whether to try to fill the input buffer when we reach the
	 * end of it.
	 */
	पूर्णांक yy_fill_buffer;

	पूर्णांक yy_buffer_status;

#घोषणा YY_BUFFER_NEW 0
#घोषणा YY_BUFFER_NORMAL 1
	/* When an खातापूर्ण's been seen but there's still some text to process
	 * then we mark the buffer as YY_खातापूर्ण_PENDING, to indicate that we
	 * shouldn't try पढ़ोing from the input source any more.  We might
	 * still have a bunch of tokens to match, though, because of
	 * possible backing-up.
	 *
	 * When we actually see the खातापूर्ण, we change the status to "new"
	 * (via zconfrestart()), so that the user can जारी scanning by
	 * just poपूर्णांकing zconfin at a new input file.
	 */
#घोषणा YY_BUFFER_खातापूर्ण_PENDING 2

	पूर्ण;
#पूर्ण_अगर /* !YY_STRUCT_YY_BUFFER_STATE */

/* Stack of input buffers. */
अटल माप_प्रकार yy_buffer_stack_top = 0; /**< index of top of stack. */
अटल माप_प्रकार yy_buffer_stack_max = 0; /**< capacity of stack. */
अटल YY_BUFFER_STATE * yy_buffer_stack = 0; /**< Stack as an array. */

/* We provide macros क्रम accessing buffer states in हाल in the
 * future we want to put the buffer states in a more general
 * "scanner state".
 *
 * Returns the top of the stack, or शून्य.
 */
#घोषणा YY_CURRENT_BUFFER ( (yy_buffer_stack) \
                          ? (yy_buffer_stack)[(yy_buffer_stack_top)] \
                          : शून्य)

/* Same as previous macro, but useful when we know that the buffer stack is not
 * शून्य or when we need an lvalue. For पूर्णांकernal use only.
 */
#घोषणा YY_CURRENT_BUFFER_LVALUE (yy_buffer_stack)[(yy_buffer_stack_top)]

/* yy_hold_अक्षर holds the अक्षरacter lost when zconftext is क्रमmed. */
अटल अक्षर yy_hold_अक्षर;
अटल पूर्णांक yy_n_अक्षरs;		/* number of अक्षरacters पढ़ो पूर्णांकo yy_ch_buf */
पूर्णांक zconfleng;

/* Poपूर्णांकs to current अक्षरacter in buffer. */
अटल अक्षर *yy_c_buf_p = (अक्षर *) 0;
अटल पूर्णांक yy_init = 0;		/* whether we need to initialize */
अटल पूर्णांक yy_start = 0;	/* start state number */

/* Flag which is used to allow zconfwrap()'s to करो buffer चयनes
 * instead of setting up a fresh zconfin.  A bit of a hack ...
 */
अटल पूर्णांक yy_did_buffer_चयन_on_eof;

व्योम zconfrestart (खाता *input_file  );
व्योम zconf_चयन_to_buffer (YY_BUFFER_STATE new_buffer  );
YY_BUFFER_STATE zconf_create_buffer (खाता *file,पूर्णांक size  );
व्योम zconf_delete_buffer (YY_BUFFER_STATE b  );
व्योम zconf_flush_buffer (YY_BUFFER_STATE b  );
व्योम zconfpush_buffer_state (YY_BUFFER_STATE new_buffer  );
व्योम zconfpop_buffer_state (व्योम );

अटल व्योम zconfensure_buffer_stack (व्योम );
अटल व्योम zconf_load_buffer_state (व्योम );
अटल व्योम zconf_init_buffer (YY_BUFFER_STATE b,खाता *file  );

#घोषणा YY_FLUSH_BUFFER zconf_flush_buffer(YY_CURRENT_BUFFER )

YY_BUFFER_STATE zconf_scan_buffer (अक्षर *base,yy_माप_प्रकार size  );
YY_BUFFER_STATE zconf_scan_string (yyस्थिर अक्षर *yy_str  );
YY_BUFFER_STATE zconf_scan_bytes (yyस्थिर अक्षर *bytes,पूर्णांक len  );

व्योम *zconfalloc (yy_माप_प्रकार  );
व्योम *zconfपुनः_स्मृति (व्योम *,yy_माप_प्रकार  );
व्योम zconfमुक्त (व्योम *  );

#घोषणा yy_new_buffer zconf_create_buffer

#घोषणा yy_set_पूर्णांकeractive(is_पूर्णांकeractive) \
	अणु \
	अगर ( ! YY_CURRENT_BUFFER )अणु \
        zconfensure_buffer_stack (); \
		YY_CURRENT_BUFFER_LVALUE =    \
            zconf_create_buffer(zconfin,YY_BUF_SIZE ); \
	पूर्ण \
	YY_CURRENT_BUFFER_LVALUE->yy_is_पूर्णांकeractive = is_पूर्णांकeractive; \
	पूर्ण

#घोषणा yy_set_bol(at_bol) \
	अणु \
	अगर ( ! YY_CURRENT_BUFFER )अणु\
        zconfensure_buffer_stack (); \
		YY_CURRENT_BUFFER_LVALUE =    \
            zconf_create_buffer(zconfin,YY_BUF_SIZE ); \
	पूर्ण \
	YY_CURRENT_BUFFER_LVALUE->yy_at_bol = at_bol; \
	पूर्ण

#घोषणा YY_AT_BOL() (YY_CURRENT_BUFFER_LVALUE->yy_at_bol)

/* Begin user sect3 */

#घोषणा zconfwrap(n) 1
#घोषणा YY_SKIP_YYWRAP

प्रकार अचिन्हित अक्षर YY_CHAR;

खाता *zconfin = (खाता *) 0, *zconfout = (खाता *) 0;

प्रकार पूर्णांक yy_state_type;

बाह्य पूर्णांक zconflineno;

पूर्णांक zconflineno = 1;

बाह्य अक्षर *zconftext;
#घोषणा yytext_ptr zconftext
अटल yyस्थिर flex_पूर्णांक16_t yy_nxt[][17] =
    अणु
    अणु
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0
    पूर्ण,

    अणु
       11,   12,   13,   14,   12,   12,   15,   12,   12,   12,
       12,   12,   12,   12,   12,   12,   12
    पूर्ण,

    अणु
       11,   12,   13,   14,   12,   12,   15,   12,   12,   12,
       12,   12,   12,   12,   12,   12,   12
    पूर्ण,

    अणु
       11,   16,   16,   17,   16,   16,   16,   16,   16,   16,
       16,   16,   16,   18,   16,   16,   16
    पूर्ण,

    अणु
       11,   16,   16,   17,   16,   16,   16,   16,   16,   16,
       16,   16,   16,   18,   16,   16,   16

    पूर्ण,

    अणु
       11,   19,   20,   21,   19,   19,   19,   19,   19,   19,
       19,   19,   19,   19,   19,   19,   19
    पूर्ण,

    अणु
       11,   19,   20,   21,   19,   19,   19,   19,   19,   19,
       19,   19,   19,   19,   19,   19,   19
    पूर्ण,

    अणु
       11,   22,   22,   23,   22,   24,   22,   22,   24,   22,
       22,   22,   22,   22,   22,   25,   22
    पूर्ण,

    अणु
       11,   22,   22,   23,   22,   24,   22,   22,   24,   22,
       22,   22,   22,   22,   22,   25,   22
    पूर्ण,

    अणु
       11,   26,   26,   27,   28,   29,   30,   31,   29,   32,
       33,   34,   35,   35,   36,   37,   38

    पूर्ण,

    अणु
       11,   26,   26,   27,   28,   29,   30,   31,   29,   32,
       33,   34,   35,   35,   36,   37,   38
    पूर्ण,

    अणु
      -11,  -11,  -11,  -11,  -11,  -11,  -11,  -11,  -11,  -11,
      -11,  -11,  -11,  -11,  -11,  -11,  -11
    पूर्ण,

    अणु
       11,  -12,  -12,  -12,  -12,  -12,  -12,  -12,  -12,  -12,
      -12,  -12,  -12,  -12,  -12,  -12,  -12
    पूर्ण,

    अणु
       11,  -13,   39,   40,  -13,  -13,   41,  -13,  -13,  -13,
      -13,  -13,  -13,  -13,  -13,  -13,  -13
    पूर्ण,

    अणु
       11,  -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,
      -14,  -14,  -14,  -14,  -14,  -14,  -14

    पूर्ण,

    अणु
       11,   42,   42,   43,   42,   42,   42,   42,   42,   42,
       42,   42,   42,   42,   42,   42,   42
    पूर्ण,

    अणु
       11,  -16,  -16,  -16,  -16,  -16,  -16,  -16,  -16,  -16,
      -16,  -16,  -16,  -16,  -16,  -16,  -16
    पूर्ण,

    अणु
       11,  -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,
      -17,  -17,  -17,  -17,  -17,  -17,  -17
    पूर्ण,

    अणु
       11,  -18,  -18,  -18,  -18,  -18,  -18,  -18,  -18,  -18,
      -18,  -18,  -18,   44,  -18,  -18,  -18
    पूर्ण,

    अणु
       11,   45,   45,  -19,   45,   45,   45,   45,   45,   45,
       45,   45,   45,   45,   45,   45,   45

    पूर्ण,

    अणु
       11,  -20,   46,   47,  -20,  -20,  -20,  -20,  -20,  -20,
      -20,  -20,  -20,  -20,  -20,  -20,  -20
    पूर्ण,

    अणु
       11,   48,  -21,  -21,   48,   48,   48,   48,   48,   48,
       48,   48,   48,   48,   48,   48,   48
    पूर्ण,

    अणु
       11,   49,   49,   50,   49,  -22,   49,   49,  -22,   49,
       49,   49,   49,   49,   49,  -22,   49
    पूर्ण,

    अणु
       11,  -23,  -23,  -23,  -23,  -23,  -23,  -23,  -23,  -23,
      -23,  -23,  -23,  -23,  -23,  -23,  -23
    पूर्ण,

    अणु
       11,  -24,  -24,  -24,  -24,  -24,  -24,  -24,  -24,  -24,
      -24,  -24,  -24,  -24,  -24,  -24,  -24

    पूर्ण,

    अणु
       11,   51,   51,   52,   51,   51,   51,   51,   51,   51,
       51,   51,   51,   51,   51,   51,   51
    पूर्ण,

    अणु
       11,  -26,  -26,  -26,  -26,  -26,  -26,  -26,  -26,  -26,
      -26,  -26,  -26,  -26,  -26,  -26,  -26
    पूर्ण,

    अणु
       11,  -27,  -27,  -27,  -27,  -27,  -27,  -27,  -27,  -27,
      -27,  -27,  -27,  -27,  -27,  -27,  -27
    पूर्ण,

    अणु
       11,  -28,  -28,  -28,  -28,  -28,  -28,  -28,  -28,  -28,
      -28,  -28,  -28,  -28,   53,  -28,  -28
    पूर्ण,

    अणु
       11,  -29,  -29,  -29,  -29,  -29,  -29,  -29,  -29,  -29,
      -29,  -29,  -29,  -29,  -29,  -29,  -29

    पूर्ण,

    अणु
       11,   54,   54,  -30,   54,   54,   54,   54,   54,   54,
       54,   54,   54,   54,   54,   54,   54
    पूर्ण,

    अणु
       11,  -31,  -31,  -31,  -31,  -31,  -31,   55,  -31,  -31,
      -31,  -31,  -31,  -31,  -31,  -31,  -31
    पूर्ण,

    अणु
       11,  -32,  -32,  -32,  -32,  -32,  -32,  -32,  -32,  -32,
      -32,  -32,  -32,  -32,  -32,  -32,  -32
    पूर्ण,

    अणु
       11,  -33,  -33,  -33,  -33,  -33,  -33,  -33,  -33,  -33,
      -33,  -33,  -33,  -33,  -33,  -33,  -33
    पूर्ण,

    अणु
       11,  -34,  -34,  -34,  -34,  -34,  -34,  -34,  -34,  -34,
      -34,   56,   57,   57,  -34,  -34,  -34

    पूर्ण,

    अणु
       11,  -35,  -35,  -35,  -35,  -35,  -35,  -35,  -35,  -35,
      -35,   57,   57,   57,  -35,  -35,  -35
    पूर्ण,

    अणु
       11,  -36,  -36,  -36,  -36,  -36,  -36,  -36,  -36,  -36,
      -36,  -36,  -36,  -36,  -36,  -36,  -36
    पूर्ण,

    अणु
       11,  -37,  -37,   58,  -37,  -37,  -37,  -37,  -37,  -37,
      -37,  -37,  -37,  -37,  -37,  -37,  -37
    पूर्ण,

    अणु
       11,  -38,  -38,  -38,  -38,  -38,  -38,  -38,  -38,  -38,
      -38,  -38,  -38,  -38,  -38,  -38,   59
    पूर्ण,

    अणु
       11,  -39,   39,   40,  -39,  -39,   41,  -39,  -39,  -39,
      -39,  -39,  -39,  -39,  -39,  -39,  -39

    पूर्ण,

    अणु
       11,  -40,  -40,  -40,  -40,  -40,  -40,  -40,  -40,  -40,
      -40,  -40,  -40,  -40,  -40,  -40,  -40
    पूर्ण,

    अणु
       11,   42,   42,   43,   42,   42,   42,   42,   42,   42,
       42,   42,   42,   42,   42,   42,   42
    पूर्ण,

    अणु
       11,   42,   42,   43,   42,   42,   42,   42,   42,   42,
       42,   42,   42,   42,   42,   42,   42
    पूर्ण,

    अणु
       11,  -43,  -43,  -43,  -43,  -43,  -43,  -43,  -43,  -43,
      -43,  -43,  -43,  -43,  -43,  -43,  -43
    पूर्ण,

    अणु
       11,  -44,  -44,  -44,  -44,  -44,  -44,  -44,  -44,  -44,
      -44,  -44,  -44,   44,  -44,  -44,  -44

    पूर्ण,

    अणु
       11,   45,   45,  -45,   45,   45,   45,   45,   45,   45,
       45,   45,   45,   45,   45,   45,   45
    पूर्ण,

    अणु
       11,  -46,   46,   47,  -46,  -46,  -46,  -46,  -46,  -46,
      -46,  -46,  -46,  -46,  -46,  -46,  -46
    पूर्ण,

    अणु
       11,   48,  -47,  -47,   48,   48,   48,   48,   48,   48,
       48,   48,   48,   48,   48,   48,   48
    पूर्ण,

    अणु
       11,  -48,  -48,  -48,  -48,  -48,  -48,  -48,  -48,  -48,
      -48,  -48,  -48,  -48,  -48,  -48,  -48
    पूर्ण,

    अणु
       11,   49,   49,   50,   49,  -49,   49,   49,  -49,   49,
       49,   49,   49,   49,   49,  -49,   49

    पूर्ण,

    अणु
       11,  -50,  -50,  -50,  -50,  -50,  -50,  -50,  -50,  -50,
      -50,  -50,  -50,  -50,  -50,  -50,  -50
    पूर्ण,

    अणु
       11,  -51,  -51,   52,  -51,  -51,  -51,  -51,  -51,  -51,
      -51,  -51,  -51,  -51,  -51,  -51,  -51
    पूर्ण,

    अणु
       11,  -52,  -52,  -52,  -52,  -52,  -52,  -52,  -52,  -52,
      -52,  -52,  -52,  -52,  -52,  -52,  -52
    पूर्ण,

    अणु
       11,  -53,  -53,  -53,  -53,  -53,  -53,  -53,  -53,  -53,
      -53,  -53,  -53,  -53,  -53,  -53,  -53
    पूर्ण,

    अणु
       11,   54,   54,  -54,   54,   54,   54,   54,   54,   54,
       54,   54,   54,   54,   54,   54,   54

    पूर्ण,

    अणु
       11,  -55,  -55,  -55,  -55,  -55,  -55,  -55,  -55,  -55,
      -55,  -55,  -55,  -55,  -55,  -55,  -55
    पूर्ण,

    अणु
       11,  -56,  -56,  -56,  -56,  -56,  -56,  -56,  -56,  -56,
      -56,   60,   57,   57,  -56,  -56,  -56
    पूर्ण,

    अणु
       11,  -57,  -57,  -57,  -57,  -57,  -57,  -57,  -57,  -57,
      -57,   57,   57,   57,  -57,  -57,  -57
    पूर्ण,

    अणु
       11,  -58,  -58,  -58,  -58,  -58,  -58,  -58,  -58,  -58,
      -58,  -58,  -58,  -58,  -58,  -58,  -58
    पूर्ण,

    अणु
       11,  -59,  -59,  -59,  -59,  -59,  -59,  -59,  -59,  -59,
      -59,  -59,  -59,  -59,  -59,  -59,  -59

    पूर्ण,

    अणु
       11,  -60,  -60,  -60,  -60,  -60,  -60,  -60,  -60,  -60,
      -60,   57,   57,   57,  -60,  -60,  -60
    पूर्ण,

    पूर्ण ;

अटल yy_state_type yy_get_previous_state (व्योम );
अटल yy_state_type yy_try_NUL_trans (yy_state_type current_state  );
अटल पूर्णांक yy_get_next_buffer (व्योम );
अटल व्योम yy_fatal_error (yyस्थिर अक्षर msg[]  );

/* Done after the current pattern has been matched and beक्रमe the
 * corresponding action - sets up zconftext.
 */
#घोषणा YY_DO_BEFORE_ACTION \
	(yytext_ptr) = yy_bp; \
	zconfleng = (माप_प्रकार) (yy_cp - yy_bp); \
	(yy_hold_अक्षर) = *yy_cp; \
	*yy_cp = '\0'; \
	(yy_c_buf_p) = yy_cp;

#घोषणा YY_NUM_RULES 33
#घोषणा YY_END_OF_BUFFER 34
/* This काष्ठा is not used in this scanner,
   but its presence is necessary. */
काष्ठा yy_trans_info
	अणु
	flex_पूर्णांक32_t yy_verअगरy;
	flex_पूर्णांक32_t yy_nxt;
	पूर्ण;
अटल yyस्थिर flex_पूर्णांक16_t yy_accept[61] =
    अणु   0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
       34,    5,    4,    2,    3,    7,    8,    6,   32,   29,
       31,   24,   28,   27,   26,   22,   17,   13,   16,   20,
       22,   11,   12,   19,   19,   14,   22,   22,    4,    2,
        3,    3,    1,    6,   32,   29,   31,   30,   24,   23,
       26,   25,   15,   20,    9,   19,   19,   21,   10,   18
    पूर्ण ;

अटल yyस्थिर flex_पूर्णांक32_t yy_ec[256] =
    अणु   0,
        1,    1,    1,    1,    1,    1,    1,    1,    2,    3,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    2,    4,    5,    6,    1,    1,    7,    8,    9,
       10,    1,    1,    1,   11,   12,   12,   13,   13,   13,
       13,   13,   13,   13,   13,   13,   13,    1,    1,    1,
       14,    1,    1,    1,   13,   13,   13,   13,   13,   13,
       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
        1,   15,    1,    1,   13,    1,   13,   13,   13,   13,

       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
       13,   13,    1,   16,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,

        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1
    पूर्ण ;

बाह्य पूर्णांक zconf_flex_debug;
पूर्णांक zconf_flex_debug = 0;

/* The पूर्णांकent behind this definition is that it'll catch
 * any uses of REJECT which flex missed.
 */
#घोषणा REJECT reject_used_but_not_detected
#घोषणा yymore() yymore_used_but_not_detected
#घोषणा YY_MORE_ADJ 0
#घोषणा YY_RESTORE_YY_MORE_OFFSET
अक्षर *zconftext;
#घोषणा YY_NO_INPUT 1

/*
 * Copyright (C) 2002 Roman Zippel <zippel@linux-m68k.org>
 * Released under the terms of the GNU GPL v2.0.
 */

#समावेश <सीमा.स>
#समावेश <मानकपन.स>
#समावेश <मानककोष.स>
#समावेश <माला.स>
#समावेश <unistd.h>

#घोषणा LKC_सूचीECT_LINK
#समावेश "lkc.h"

#घोषणा START_STRSIZE	16

अटल काष्ठा अणु
	काष्ठा file *file;
	पूर्णांक lineno;
पूर्ण current_pos;

अटल अक्षर *text;
अटल पूर्णांक text_size, text_asize;

काष्ठा buffer अणु
        काष्ठा buffer *parent;
        YY_BUFFER_STATE state;
पूर्ण;

काष्ठा buffer *current_buf;

अटल पूर्णांक last_ts, first_ts;

अटल व्योम zconf_endhelp(व्योम);
अटल व्योम zconf_endfile(व्योम);

अटल व्योम new_string(व्योम)
अणु
	text = दो_स्मृति(START_STRSIZE);
	text_asize = START_STRSIZE;
	text_size = 0;
	*text = 0;
पूर्ण

अटल व्योम append_string(स्थिर अक्षर *str, पूर्णांक size)
अणु
	पूर्णांक new_size = text_size + size + 1;
	अगर (new_size > text_asize) अणु
		new_size += START_STRSIZE - 1;
		new_size &= -START_STRSIZE;
		text = पुनः_स्मृति(text, new_size);
		text_asize = new_size;
	पूर्ण
	स_नकल(text + text_size, str, size);
	text_size += size;
	text[text_size] = 0;
पूर्ण

अटल व्योम alloc_string(स्थिर अक्षर *str, पूर्णांक size)
अणु
	text = दो_स्मृति(size + 1);
	स_नकल(text, str, size);
	text[size] = 0;
पूर्ण

#घोषणा INITIAL 0
#घोषणा COMMAND 1
#घोषणा HELP 2
#घोषणा STRING 3
#घोषणा PARAM 4

#अगर_अघोषित YY_NO_UNISTD_H
/* Special हाल क्रम "unistd.h", since it is non-ANSI. We include it way
 * करोwn here because we want the user's section 1 to have been scanned first.
 * The user has a chance to override it with an option.
 */
#समावेश <unistd.h>
#पूर्ण_अगर

#अगर_अघोषित YY_EXTRA_TYPE
#घोषणा YY_EXTRA_TYPE व्योम *
#पूर्ण_अगर

अटल पूर्णांक yy_init_globals (व्योम );

/* Accessor methods to globals.
   These are made visible to non-reentrant scanners क्रम convenience. */

पूर्णांक zconflex_destroy (व्योम );

पूर्णांक zconfget_debug (व्योम );

व्योम zconfset_debug (पूर्णांक debug_flag  );

YY_EXTRA_TYPE zconfget_extra (व्योम );

व्योम zconfset_extra (YY_EXTRA_TYPE user_defined  );

खाता *zconfget_in (व्योम );

व्योम zconfset_in  (खाता * in_str  );

खाता *zconfget_out (व्योम );

व्योम zconfset_out  (खाता * out_str  );

पूर्णांक zconfget_leng (व्योम );

अक्षर *zconfget_text (व्योम );

पूर्णांक zconfget_lineno (व्योम );

व्योम zconfset_lineno (पूर्णांक line_number  );

/* Macros after this poपूर्णांक can all be overridden by user definitions in
 * section 1.
 */

#अगर_अघोषित YY_SKIP_YYWRAP
#अगर_घोषित __cplusplus
बाह्य "C" पूर्णांक zconfwrap (व्योम );
#अन्यथा
बाह्य पूर्णांक zconfwrap (व्योम );
#पूर्ण_अगर
#पूर्ण_अगर

    अटल व्योम yyunput (पूर्णांक c,अक्षर *buf_ptr  );
    
#अगर_अघोषित yytext_ptr
अटल व्योम yy_flex_म_नकलन (अक्षर *,yyस्थिर अक्षर *,पूर्णांक );
#पूर्ण_अगर

#अगर_घोषित YY_NEED_STRLEN
अटल पूर्णांक yy_flex_म_माप (yyस्थिर अक्षर * );
#पूर्ण_अगर

#अगर_अघोषित YY_NO_INPUT

#अगर_घोषित __cplusplus
अटल पूर्णांक yyinput (व्योम );
#अन्यथा
अटल पूर्णांक input (व्योम );
#पूर्ण_अगर

#पूर्ण_अगर

/* Amount of stuff to slurp up with each पढ़ो. */
#अगर_अघोषित YY_READ_BUF_SIZE
#अगर_घोषित __ia64__
/* On IA-64, the buffer size is 16k, not 8k */
#घोषणा YY_READ_BUF_SIZE 16384
#अन्यथा
#घोषणा YY_READ_BUF_SIZE 8192
#पूर्ण_अगर /* __ia64__ */
#पूर्ण_अगर

/* Copy whatever the last rule matched to the standard output. */
#अगर_अघोषित ECHO
/* This used to be an ख_माला_दो(), but since the string might contain NUL's,
 * we now use ख_डालो().
 */
#घोषणा ECHO करो अणु अगर (ख_डालो( zconftext, zconfleng, 1, zconfout )) अणुपूर्ण पूर्ण जबतक (0)
#पूर्ण_अगर

/* Gets input and stuffs it पूर्णांकo "buf".  number of अक्षरacters पढ़ो, or YY_शून्य,
 * is वापसed in "result".
 */
#अगर_अघोषित YY_INPUT
#घोषणा YY_INPUT(buf,result,max_size) \
	त्रुटि_सं=0; \
	जबतक ( (result = पढ़ो( fileno(zconfin), (अक्षर *) buf, max_size )) < 0 ) \
	अणु \
		अगर( त्रुटि_सं != EINTR) \
		अणु \
			YY_FATAL_ERROR( "input in flex scanner failed" ); \
			अवरोध; \
		पूर्ण \
		त्रुटि_सं=0; \
		साफ_त्रुटि(zconfin); \
	पूर्ण\
\

#पूर्ण_अगर

/* No semi-colon after वापस; correct usage is to ग_लिखो "yyterminate();" -
 * we करोn't want an extra ';' after the "return" because that will cause
 * some compilers to complain about unreachable statements.
 */
#अगर_अघोषित yyterminate
#घोषणा yyterminate() वापस YY_शून्य
#पूर्ण_अगर

/* Number of entries by which start-condition stack grows. */
#अगर_अघोषित YY_START_STACK_INCR
#घोषणा YY_START_STACK_INCR 25
#पूर्ण_अगर

/* Report a fatal error. */
#अगर_अघोषित YY_FATAL_ERROR
#घोषणा YY_FATAL_ERROR(msg) yy_fatal_error( msg )
#पूर्ण_अगर

/* end tables serialization काष्ठाures and prototypes */

/* Default declaration of generated scanner - a define so the user can
 * easily add parameters.
 */
#अगर_अघोषित YY_DECL
#घोषणा YY_DECL_IS_OURS 1

बाह्य पूर्णांक zconflex (व्योम);

#घोषणा YY_DECL पूर्णांक zconflex (व्योम)
#पूर्ण_अगर /* !YY_DECL */

/* Code executed at the beginning of each rule, after zconftext and zconfleng
 * have been set up.
 */
#अगर_अघोषित YY_USER_ACTION
#घोषणा YY_USER_ACTION
#पूर्ण_अगर

/* Code executed at the end of each rule. */
#अगर_अघोषित YY_BREAK
#घोषणा YY_BREAK अवरोध;
#पूर्ण_अगर

#घोषणा YY_RULE_SETUP \
	YY_USER_ACTION

/** The मुख्य scanner function which करोes all the work.
 */
YY_DECL
अणु
	रेजिस्टर yy_state_type yy_current_state;
	रेजिस्टर अक्षर *yy_cp, *yy_bp;
	रेजिस्टर पूर्णांक yy_act;
    
	पूर्णांक str = 0;
	पूर्णांक ts, i;

	अगर ( !(yy_init) )
		अणु
		(yy_init) = 1;

#अगर_घोषित YY_USER_INIT
		YY_USER_INIT;
#पूर्ण_अगर

		अगर ( ! (yy_start) )
			(yy_start) = 1;	/* first start state */

		अगर ( ! zconfin )
			zconfin = मानक_निवेश;

		अगर ( ! zconfout )
			zconfout = मानक_निकास;

		अगर ( ! YY_CURRENT_BUFFER ) अणु
			zconfensure_buffer_stack ();
			YY_CURRENT_BUFFER_LVALUE =
				zconf_create_buffer(zconfin,YY_BUF_SIZE );
		पूर्ण

		zconf_load_buffer_state( );
		पूर्ण

	जबतक ( 1 )		/* loops until end-of-file is reached */
		अणु
		yy_cp = (yy_c_buf_p);

		/* Support of zconftext. */
		*yy_cp = (yy_hold_अक्षर);

		/* yy_bp poपूर्णांकs to the position in yy_ch_buf of the start of
		 * the current run.
		 */
		yy_bp = yy_cp;

		yy_current_state = (yy_start);
yy_match:
		जबतक ( (yy_current_state = yy_nxt[yy_current_state][ yy_ec[YY_SC_TO_UI(*yy_cp)]  ]) > 0 )
			++yy_cp;

		yy_current_state = -yy_current_state;

yy_find_action:
		yy_act = yy_accept[yy_current_state];

		YY_DO_BEFORE_ACTION;

करो_action:	/* This label is used only to access खातापूर्ण actions. */

		चयन ( yy_act )
	अणु /* beginning of action चयन */
हाल 1:
/* rule 1 can match eol */
हाल 2:
/* rule 2 can match eol */
YY_RULE_SETUP
अणु
	current_file->lineno++;
	वापस T_EOL;
पूर्ण
	YY_BREAK
हाल 3:
YY_RULE_SETUP

	YY_BREAK
हाल 4:
YY_RULE_SETUP
अणु
	BEGIN(COMMAND);
पूर्ण
	YY_BREAK
हाल 5:
YY_RULE_SETUP
अणु
	unput(zconftext[0]);
	BEGIN(COMMAND);
पूर्ण
	YY_BREAK

हाल 6:
YY_RULE_SETUP
अणु
		काष्ठा kconf_id *id = kconf_id_lookup(zconftext, zconfleng);
		BEGIN(PARAM);
		current_pos.file = current_file;
		current_pos.lineno = current_file->lineno;
		अगर (id && id->flags & TF_COMMAND) अणु
			zconflval.id = id;
			वापस id->token;
		पूर्ण
		alloc_string(zconftext, zconfleng);
		zconflval.string = text;
		वापस T_WORD;
	पूर्ण
	YY_BREAK
हाल 7:
YY_RULE_SETUP

	YY_BREAK
हाल 8:
/* rule 8 can match eol */
YY_RULE_SETUP
अणु
		BEGIN(INITIAL);
		current_file->lineno++;
		वापस T_EOL;
	पूर्ण
	YY_BREAK

हाल 9:
YY_RULE_SETUP
वापस T_AND;
	YY_BREAK
हाल 10:
YY_RULE_SETUP
वापस T_OR;
	YY_BREAK
हाल 11:
YY_RULE_SETUP
वापस T_OPEN_PAREN;
	YY_BREAK
हाल 12:
YY_RULE_SETUP
वापस T_CLOSE_PAREN;
	YY_BREAK
हाल 13:
YY_RULE_SETUP
वापस T_NOT;
	YY_BREAK
हाल 14:
YY_RULE_SETUP
वापस T_EQUAL;
	YY_BREAK
हाल 15:
YY_RULE_SETUP
वापस T_UNEQUAL;
	YY_BREAK
हाल 16:
YY_RULE_SETUP
अणु
		str = zconftext[0];
		new_string();
		BEGIN(STRING);
	पूर्ण
	YY_BREAK
हाल 17:
/* rule 17 can match eol */
YY_RULE_SETUP
BEGIN(INITIAL); current_file->lineno++; वापस T_EOL;
	YY_BREAK
हाल 18:
YY_RULE_SETUP
/* ignore */
	YY_BREAK
हाल 19:
YY_RULE_SETUP
अणु
		काष्ठा kconf_id *id = kconf_id_lookup(zconftext, zconfleng);
		अगर (id && id->flags & TF_PARAM) अणु
			zconflval.id = id;
			वापस id->token;
		पूर्ण
		alloc_string(zconftext, zconfleng);
		zconflval.string = text;
		वापस T_WORD;
	पूर्ण
	YY_BREAK
हाल 20:
YY_RULE_SETUP
/* comment */
	YY_BREAK
हाल 21:
/* rule 21 can match eol */
YY_RULE_SETUP
current_file->lineno++;
	YY_BREAK
हाल 22:
YY_RULE_SETUP

	YY_BREAK
हाल YY_STATE_खातापूर्ण(PARAM):
अणु
		BEGIN(INITIAL);
	पूर्ण
	YY_BREAK

हाल 23:
/* rule 23 can match eol */
*yy_cp = (yy_hold_अक्षर); /* unकरो effects of setting up zconftext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up zconftext again */
YY_RULE_SETUP
अणु
		append_string(zconftext, zconfleng);
		zconflval.string = text;
		वापस T_WORD_QUOTE;
	पूर्ण
	YY_BREAK
हाल 24:
YY_RULE_SETUP
अणु
		append_string(zconftext, zconfleng);
	पूर्ण
	YY_BREAK
हाल 25:
/* rule 25 can match eol */
*yy_cp = (yy_hold_अक्षर); /* unकरो effects of setting up zconftext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up zconftext again */
YY_RULE_SETUP
अणु
		append_string(zconftext + 1, zconfleng - 1);
		zconflval.string = text;
		वापस T_WORD_QUOTE;
	पूर्ण
	YY_BREAK
हाल 26:
YY_RULE_SETUP
अणु
		append_string(zconftext + 1, zconfleng - 1);
	पूर्ण
	YY_BREAK
हाल 27:
YY_RULE_SETUP
अणु
		अगर (str == zconftext[0]) अणु
			BEGIN(PARAM);
			zconflval.string = text;
			वापस T_WORD_QUOTE;
		पूर्ण अन्यथा
			append_string(zconftext, 1);
	पूर्ण
	YY_BREAK
हाल 28:
/* rule 28 can match eol */
YY_RULE_SETUP
अणु
		म_लिखो("%s:%d:warning: multi-line strings not supported\n", zconf_curname(), zconf_lineno());
		current_file->lineno++;
		BEGIN(INITIAL);
		वापस T_EOL;
	पूर्ण
	YY_BREAK
हाल YY_STATE_खातापूर्ण(STRING):
अणु
		BEGIN(INITIAL);
	पूर्ण
	YY_BREAK

हाल 29:
YY_RULE_SETUP
अणु
		ts = 0;
		क्रम (i = 0; i < zconfleng; i++) अणु
			अगर (zconftext[i] == '\t')
				ts = (ts & ~7) + 8;
			अन्यथा
				ts++;
		पूर्ण
		last_ts = ts;
		अगर (first_ts) अणु
			अगर (ts < first_ts) अणु
				zconf_endhelp();
				वापस T_HELPTEXT;
			पूर्ण
			ts -= first_ts;
			जबतक (ts > 8) अणु
				append_string("        ", 8);
				ts -= 8;
			पूर्ण
			append_string("        ", ts);
		पूर्ण
	पूर्ण
	YY_BREAK
हाल 30:
/* rule 30 can match eol */
*yy_cp = (yy_hold_अक्षर); /* unकरो effects of setting up zconftext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up zconftext again */
YY_RULE_SETUP
अणु
		current_file->lineno++;
		zconf_endhelp();
		वापस T_HELPTEXT;
	पूर्ण
	YY_BREAK
हाल 31:
/* rule 31 can match eol */
YY_RULE_SETUP
अणु
		current_file->lineno++;
		append_string("\n", 1);
	पूर्ण
	YY_BREAK
हाल 32:
YY_RULE_SETUP
अणु
		जबतक (zconfleng) अणु
			अगर ((zconftext[zconfleng-1] != ' ') && (zconftext[zconfleng-1] != '\t'))
				अवरोध;
			zconfleng--;
		पूर्ण
		append_string(zconftext, zconfleng);
		अगर (!first_ts)
			first_ts = last_ts;
	पूर्ण
	YY_BREAK
हाल YY_STATE_खातापूर्ण(HELP):
अणु
		zconf_endhelp();
		वापस T_HELPTEXT;
	पूर्ण
	YY_BREAK

हाल YY_STATE_खातापूर्ण(INITIAL):
हाल YY_STATE_खातापूर्ण(COMMAND):
अणु
	अगर (current_file) अणु
		zconf_endfile();
		वापस T_EOL;
	पूर्ण
	ख_बंद(zconfin);
	yyterminate();
पूर्ण
	YY_BREAK
हाल 33:
YY_RULE_SETUP
YY_FATAL_ERROR( "flex scanner jammed" );
	YY_BREAK

	हाल YY_END_OF_BUFFER:
		अणु
		/* Amount of text matched not including the EOB अक्षर. */
		पूर्णांक yy_amount_of_matched_text = (पूर्णांक) (yy_cp - (yytext_ptr)) - 1;

		/* Unकरो the effects of YY_DO_BEFORE_ACTION. */
		*yy_cp = (yy_hold_अक्षर);
		YY_RESTORE_YY_MORE_OFFSET

		अगर ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_NEW )
			अणु
			/* We're scanning a new file or input source.  It's
			 * possible that this happened because the user
			 * just poपूर्णांकed zconfin at a new source and called
			 * zconflex().  If so, then we have to assure
			 * consistency between YY_CURRENT_BUFFER and our
			 * globals.  Here is the right place to करो so, because
			 * this is the first action (other than possibly a
			 * back-up) that will match क्रम the new input source.
			 */
			(yy_n_अक्षरs) = YY_CURRENT_BUFFER_LVALUE->yy_n_अक्षरs;
			YY_CURRENT_BUFFER_LVALUE->yy_input_file = zconfin;
			YY_CURRENT_BUFFER_LVALUE->yy_buffer_status = YY_BUFFER_NORMAL;
			पूर्ण

		/* Note that here we test क्रम yy_c_buf_p "<=" to the position
		 * of the first EOB in the buffer, since yy_c_buf_p will
		 * alपढ़ोy have been incremented past the NUL अक्षरacter
		 * (since all states make transitions on EOB to the
		 * end-of-buffer state).  Contrast this with the test
		 * in input().
		 */
		अगर ( (yy_c_buf_p) <= &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_अक्षरs)] )
			अणु /* This was really a NUL. */
			yy_state_type yy_next_state;

			(yy_c_buf_p) = (yytext_ptr) + yy_amount_of_matched_text;

			yy_current_state = yy_get_previous_state(  );

			/* Okay, we're now positioned to make the NUL
			 * transition.  We couldn't have
			 * yy_get_previous_state() go ahead and करो it
			 * क्रम us because it करोesn't know how to deal
			 * with the possibility of jamming (and we करोn't
			 * want to build jamming पूर्णांकo it because then it
			 * will run more slowly).
			 */

			yy_next_state = yy_try_NUL_trans( yy_current_state );

			yy_bp = (yytext_ptr) + YY_MORE_ADJ;

			अगर ( yy_next_state )
				अणु
				/* Consume the NUL. */
				yy_cp = ++(yy_c_buf_p);
				yy_current_state = yy_next_state;
				जाओ yy_match;
				पूर्ण

			अन्यथा
				अणु
				yy_cp = (yy_c_buf_p);
				जाओ yy_find_action;
				पूर्ण
			पूर्ण

		अन्यथा चयन ( yy_get_next_buffer(  ) )
			अणु
			हाल EOB_ACT_END_OF_खाता:
				अणु
				(yy_did_buffer_चयन_on_eof) = 0;

				अगर ( zconfwrap( ) )
					अणु
					/* Note: because we've taken care in
					 * yy_get_next_buffer() to have set up
					 * zconftext, we can now set up
					 * yy_c_buf_p so that अगर some total
					 * hoser (like flex itself) wants to
					 * call the scanner after we वापस the
					 * YY_शून्य, it'll still work - another
					 * YY_शून्य will get वापसed.
					 */
					(yy_c_buf_p) = (yytext_ptr) + YY_MORE_ADJ;

					yy_act = YY_STATE_खातापूर्ण(YY_START);
					जाओ करो_action;
					पूर्ण

				अन्यथा
					अणु
					अगर ( ! (yy_did_buffer_चयन_on_eof) )
						YY_NEW_खाता;
					पूर्ण
				अवरोध;
				पूर्ण

			हाल EOB_ACT_CONTINUE_SCAN:
				(yy_c_buf_p) =
					(yytext_ptr) + yy_amount_of_matched_text;

				yy_current_state = yy_get_previous_state(  );

				yy_cp = (yy_c_buf_p);
				yy_bp = (yytext_ptr) + YY_MORE_ADJ;
				जाओ yy_match;

			हाल EOB_ACT_LAST_MATCH:
				(yy_c_buf_p) =
				&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_अक्षरs)];

				yy_current_state = yy_get_previous_state(  );

				yy_cp = (yy_c_buf_p);
				yy_bp = (yytext_ptr) + YY_MORE_ADJ;
				जाओ yy_find_action;
			पूर्ण
		अवरोध;
		पूर्ण

	शेष:
		YY_FATAL_ERROR(
			"fatal flex scanner internal error--no action found" );
	पूर्ण /* end of action चयन */
		पूर्ण /* end of scanning one token */
पूर्ण /* end of zconflex */

/* yy_get_next_buffer - try to पढ़ो in a new buffer
 *
 * Returns a code representing an action:
 *	EOB_ACT_LAST_MATCH -
 *	EOB_ACT_CONTINUE_SCAN - जारी scanning from current position
 *	EOB_ACT_END_OF_खाता - end of file
 */
अटल पूर्णांक yy_get_next_buffer (व्योम)
अणु
    	रेजिस्टर अक्षर *dest = YY_CURRENT_BUFFER_LVALUE->yy_ch_buf;
	रेजिस्टर अक्षर *source = (yytext_ptr);
	रेजिस्टर पूर्णांक number_to_move, i;
	पूर्णांक ret_val;

	अगर ( (yy_c_buf_p) > &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_अक्षरs) + 1] )
		YY_FATAL_ERROR(
		"fatal flex scanner internal error--end of buffer missed" );

	अगर ( YY_CURRENT_BUFFER_LVALUE->yy_fill_buffer == 0 )
		अणु /* Don't try to fill the buffer, so this is an खातापूर्ण. */
		अगर ( (yy_c_buf_p) - (yytext_ptr) - YY_MORE_ADJ == 1 )
			अणु
			/* We matched a single अक्षरacter, the EOB, so
			 * treat this as a final खातापूर्ण.
			 */
			वापस EOB_ACT_END_OF_खाता;
			पूर्ण

		अन्यथा
			अणु
			/* We matched some text prior to the EOB, first
			 * process it.
			 */
			वापस EOB_ACT_LAST_MATCH;
			पूर्ण
		पूर्ण

	/* Try to पढ़ो more data. */

	/* First move last अक्षरs to start of buffer. */
	number_to_move = (पूर्णांक) ((yy_c_buf_p) - (yytext_ptr)) - 1;

	क्रम ( i = 0; i < number_to_move; ++i )
		*(dest++) = *(source++);

	अगर ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_खातापूर्ण_PENDING )
		/* करोn't do the read, it's not guaranteed to वापस an खातापूर्ण,
		 * just क्रमce an खातापूर्ण
		 */
		YY_CURRENT_BUFFER_LVALUE->yy_n_अक्षरs = (yy_n_अक्षरs) = 0;

	अन्यथा
		अणु
			पूर्णांक num_to_पढ़ो =
			YY_CURRENT_BUFFER_LVALUE->yy_buf_size - number_to_move - 1;

		जबतक ( num_to_पढ़ो <= 0 )
			अणु /* Not enough room in the buffer - grow it. */

			/* just a लघुer name क्रम the current buffer */
			YY_BUFFER_STATE b = YY_CURRENT_BUFFER;

			पूर्णांक yy_c_buf_p_offset =
				(पूर्णांक) ((yy_c_buf_p) - b->yy_ch_buf);

			अगर ( b->yy_is_our_buffer )
				अणु
				पूर्णांक new_size = b->yy_buf_size * 2;

				अगर ( new_size <= 0 )
					b->yy_buf_size += b->yy_buf_size / 8;
				अन्यथा
					b->yy_buf_size *= 2;

				b->yy_ch_buf = (अक्षर *)
					/* Include room in क्रम 2 EOB अक्षरs. */
					zconfपुनः_स्मृति((व्योम *) b->yy_ch_buf,b->yy_buf_size + 2  );
				पूर्ण
			अन्यथा
				/* Can't grow it, we don't own it. */
				b->yy_ch_buf = 0;

			अगर ( ! b->yy_ch_buf )
				YY_FATAL_ERROR(
				"fatal error - scanner input buffer overflow" );

			(yy_c_buf_p) = &b->yy_ch_buf[yy_c_buf_p_offset];

			num_to_पढ़ो = YY_CURRENT_BUFFER_LVALUE->yy_buf_size -
						number_to_move - 1;

			पूर्ण

		अगर ( num_to_पढ़ो > YY_READ_BUF_SIZE )
			num_to_पढ़ो = YY_READ_BUF_SIZE;

		/* Read in more data. */
		YY_INPUT( (&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move]),
			(yy_n_अक्षरs), (माप_प्रकार) num_to_पढ़ो );

		YY_CURRENT_BUFFER_LVALUE->yy_n_अक्षरs = (yy_n_अक्षरs);
		पूर्ण

	अगर ( (yy_n_अक्षरs) == 0 )
		अणु
		अगर ( number_to_move == YY_MORE_ADJ )
			अणु
			ret_val = EOB_ACT_END_OF_खाता;
			zconfrestart(zconfin  );
			पूर्ण

		अन्यथा
			अणु
			ret_val = EOB_ACT_LAST_MATCH;
			YY_CURRENT_BUFFER_LVALUE->yy_buffer_status =
				YY_BUFFER_खातापूर्ण_PENDING;
			पूर्ण
		पूर्ण

	अन्यथा
		ret_val = EOB_ACT_CONTINUE_SCAN;

	अगर ((yy_माप_प्रकार) ((yy_n_अक्षरs) + number_to_move) > YY_CURRENT_BUFFER_LVALUE->yy_buf_size) अणु
		/* Extend the array by 50%, plus the number we really need. */
		yy_माप_प्रकार new_size = (yy_n_अक्षरs) + number_to_move + ((yy_n_अक्षरs) >> 1);
		YY_CURRENT_BUFFER_LVALUE->yy_ch_buf = (अक्षर *) zconfपुनः_स्मृति((व्योम *) YY_CURRENT_BUFFER_LVALUE->yy_ch_buf,new_size  );
		अगर ( ! YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )
			YY_FATAL_ERROR( "out of dynamic memory in yy_get_next_buffer()" );
	पूर्ण

	(yy_n_अक्षरs) += number_to_move;
	YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_अक्षरs)] = YY_END_OF_BUFFER_CHAR;
	YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_अक्षरs) + 1] = YY_END_OF_BUFFER_CHAR;

	(yytext_ptr) = &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[0];

	वापस ret_val;
पूर्ण

/* yy_get_previous_state - get the state just beक्रमe the EOB अक्षर was reached */

    अटल yy_state_type yy_get_previous_state (व्योम)
अणु
	रेजिस्टर yy_state_type yy_current_state;
	रेजिस्टर अक्षर *yy_cp;
    
	yy_current_state = (yy_start);

	क्रम ( yy_cp = (yytext_ptr) + YY_MORE_ADJ; yy_cp < (yy_c_buf_p); ++yy_cp )
		अणु
		yy_current_state = yy_nxt[yy_current_state][(*yy_cp ? yy_ec[YY_SC_TO_UI(*yy_cp)] : 1)];
		पूर्ण

	वापस yy_current_state;
पूर्ण

/* yy_try_NUL_trans - try to make a transition on the NUL अक्षरacter
 *
 * synopsis
 *	next_state = yy_try_NUL_trans( current_state );
 */
    अटल yy_state_type yy_try_NUL_trans  (yy_state_type yy_current_state )
अणु
	रेजिस्टर पूर्णांक yy_is_jam;
    
	yy_current_state = yy_nxt[yy_current_state][1];
	yy_is_jam = (yy_current_state <= 0);

	वापस yy_is_jam ? 0 : yy_current_state;
पूर्ण

    अटल व्योम yyunput (पूर्णांक c, रेजिस्टर अक्षर * yy_bp )
अणु
	रेजिस्टर अक्षर *yy_cp;
    
    yy_cp = (yy_c_buf_p);

	/* unकरो effects of setting up zconftext */
	*yy_cp = (yy_hold_अक्षर);

	अगर ( yy_cp < YY_CURRENT_BUFFER_LVALUE->yy_ch_buf + 2 )
		अणु /* need to shअगरt things up to make room */
		/* +2 क्रम EOB अक्षरs. */
		रेजिस्टर पूर्णांक number_to_move = (yy_n_अक्षरs) + 2;
		रेजिस्टर अक्षर *dest = &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[
					YY_CURRENT_BUFFER_LVALUE->yy_buf_size + 2];
		रेजिस्टर अक्षर *source =
				&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move];

		जबतक ( source > YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )
			*--dest = *--source;

		yy_cp += (पूर्णांक) (dest - source);
		yy_bp += (पूर्णांक) (dest - source);
		YY_CURRENT_BUFFER_LVALUE->yy_n_अक्षरs =
			(yy_n_अक्षरs) = YY_CURRENT_BUFFER_LVALUE->yy_buf_size;

		अगर ( yy_cp < YY_CURRENT_BUFFER_LVALUE->yy_ch_buf + 2 )
			YY_FATAL_ERROR( "flex scanner push-back overflow" );
		पूर्ण

	*--yy_cp = (अक्षर) c;

	(yytext_ptr) = yy_bp;
	(yy_hold_अक्षर) = *yy_cp;
	(yy_c_buf_p) = yy_cp;
पूर्ण

#अगर_अघोषित YY_NO_INPUT
#अगर_घोषित __cplusplus
    अटल पूर्णांक yyinput (व्योम)
#अन्यथा
    अटल पूर्णांक input  (व्योम)
#पूर्ण_अगर

अणु
	पूर्णांक c;
    
	*(yy_c_buf_p) = (yy_hold_अक्षर);

	अगर ( *(yy_c_buf_p) == YY_END_OF_BUFFER_CHAR )
		अणु
		/* yy_c_buf_p now poपूर्णांकs to the अक्षरacter we want to वापस.
		 * If this occurs *beक्रमe* the EOB अक्षरacters, then it's a
		 * valid NUL; अगर not, then we've hit the end of the buffer.
		 */
		अगर ( (yy_c_buf_p) < &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_अक्षरs)] )
			/* This was really a NUL. */
			*(yy_c_buf_p) = '\0';

		अन्यथा
			अणु /* need more input */
			पूर्णांक offset = (yy_c_buf_p) - (yytext_ptr);
			++(yy_c_buf_p);

			चयन ( yy_get_next_buffer(  ) )
				अणु
				हाल EOB_ACT_LAST_MATCH:
					/* This happens because yy_g_n_b()
					 * sees that we've accumulated a
					 * token and flags that we need to
					 * try matching the token beक्रमe
					 * proceeding.  But क्रम input(),
					 * there's no matching to consider.
					 * So convert the EOB_ACT_LAST_MATCH
					 * to EOB_ACT_END_OF_खाता.
					 */

					/* Reset buffer status. */
					zconfrestart(zconfin );

					/*FALLTHROUGH*/

				हाल EOB_ACT_END_OF_खाता:
					अणु
					अगर ( zconfwrap( ) )
						वापस खातापूर्ण;

					अगर ( ! (yy_did_buffer_चयन_on_eof) )
						YY_NEW_खाता;
#अगर_घोषित __cplusplus
					वापस yyinput();
#अन्यथा
					वापस input();
#पूर्ण_अगर
					पूर्ण

				हाल EOB_ACT_CONTINUE_SCAN:
					(yy_c_buf_p) = (yytext_ptr) + offset;
					अवरोध;
				पूर्ण
			पूर्ण
		पूर्ण

	c = *(अचिन्हित अक्षर *) (yy_c_buf_p);	/* cast क्रम 8-bit अक्षर's */
	*(yy_c_buf_p) = '\0';	/* preserve zconftext */
	(yy_hold_अक्षर) = *++(yy_c_buf_p);

	वापस c;
पूर्ण
#पूर्ण_अगर	/* अगरndef YY_NO_INPUT */

/** Immediately चयन to a dअगरferent input stream.
 * @param input_file A पढ़ोable stream.
 * 
 * @note This function करोes not reset the start condition to @c INITIAL .
 */
    व्योम zconfrestart  (खाता * input_file )
अणु
    
	अगर ( ! YY_CURRENT_BUFFER )अणु
        zconfensure_buffer_stack ();
		YY_CURRENT_BUFFER_LVALUE =
            zconf_create_buffer(zconfin,YY_BUF_SIZE );
	पूर्ण

	zconf_init_buffer(YY_CURRENT_BUFFER,input_file );
	zconf_load_buffer_state( );
पूर्ण

/** Switch to a dअगरferent input buffer.
 * @param new_buffer The new input buffer.
 * 
 */
    व्योम zconf_चयन_to_buffer  (YY_BUFFER_STATE  new_buffer )
अणु
    
	/* TODO. We should be able to replace this entire function body
	 * with
	 *		zconfpop_buffer_state();
	 *		zconfpush_buffer_state(new_buffer);
     */
	zconfensure_buffer_stack ();
	अगर ( YY_CURRENT_BUFFER == new_buffer )
		वापस;

	अगर ( YY_CURRENT_BUFFER )
		अणु
		/* Flush out inक्रमmation क्रम old buffer. */
		*(yy_c_buf_p) = (yy_hold_अक्षर);
		YY_CURRENT_BUFFER_LVALUE->yy_buf_pos = (yy_c_buf_p);
		YY_CURRENT_BUFFER_LVALUE->yy_n_अक्षरs = (yy_n_अक्षरs);
		पूर्ण

	YY_CURRENT_BUFFER_LVALUE = new_buffer;
	zconf_load_buffer_state( );

	/* We करोn't actually know whether we did this चयन during
	 * खातापूर्ण (zconfwrap()) processing, but the only समय this flag
	 * is looked at is after zconfwrap() is called, so it's safe
	 * to go ahead and always set it.
	 */
	(yy_did_buffer_चयन_on_eof) = 1;
पूर्ण

अटल व्योम zconf_load_buffer_state  (व्योम)
अणु
    	(yy_n_अक्षरs) = YY_CURRENT_BUFFER_LVALUE->yy_n_अक्षरs;
	(yytext_ptr) = (yy_c_buf_p) = YY_CURRENT_BUFFER_LVALUE->yy_buf_pos;
	zconfin = YY_CURRENT_BUFFER_LVALUE->yy_input_file;
	(yy_hold_अक्षर) = *(yy_c_buf_p);
पूर्ण

/** Allocate and initialize an input buffer state.
 * @param file A पढ़ोable stream.
 * @param size The अक्षरacter buffer size in bytes. When in करोubt, use @c YY_BUF_SIZE.
 * 
 * @वापस the allocated buffer state.
 */
    YY_BUFFER_STATE zconf_create_buffer  (खाता * file, पूर्णांक  size )
अणु
	YY_BUFFER_STATE b;
    
	b = (YY_BUFFER_STATE) zconfalloc(माप( काष्ठा yy_buffer_state )  );
	अगर ( ! b )
		YY_FATAL_ERROR( "out of dynamic memory in zconf_create_buffer()" );

	b->yy_buf_size = size;

	/* yy_ch_buf has to be 2 अक्षरacters दीर्घer than the size given because
	 * we need to put in 2 end-of-buffer अक्षरacters.
	 */
	b->yy_ch_buf = (अक्षर *) zconfalloc(b->yy_buf_size + 2  );
	अगर ( ! b->yy_ch_buf )
		YY_FATAL_ERROR( "out of dynamic memory in zconf_create_buffer()" );

	b->yy_is_our_buffer = 1;

	zconf_init_buffer(b,file );

	वापस b;
पूर्ण

/** Destroy the buffer.
 * @param b a buffer created with zconf_create_buffer()
 * 
 */
    व्योम zconf_delete_buffer (YY_BUFFER_STATE  b )
अणु
    
	अगर ( ! b )
		वापस;

	अगर ( b == YY_CURRENT_BUFFER ) /* Not sure अगर we should pop here. */
		YY_CURRENT_BUFFER_LVALUE = (YY_BUFFER_STATE) 0;

	अगर ( b->yy_is_our_buffer )
		zconfमुक्त((व्योम *) b->yy_ch_buf  );

	zconfमुक्त((व्योम *) b  );
पूर्ण

/* Initializes or reinitializes a buffer.
 * This function is someबार called more than once on the same buffer,
 * such as during a zconfrestart() or at खातापूर्ण.
 */
    अटल व्योम zconf_init_buffer  (YY_BUFFER_STATE  b, खाता * file )

अणु
	पूर्णांक oत्रुटि_सं = त्रुटि_सं;
    
	zconf_flush_buffer(b );

	b->yy_input_file = file;
	b->yy_fill_buffer = 1;

    /* If b is the current buffer, then zconf_init_buffer was _probably_
     * called from zconfrestart() or through yy_get_next_buffer.
     * In that हाल, we करोn't want to reset the lineno or column.
     */
    अगर (b != YY_CURRENT_BUFFER)अणु
        b->yy_bs_lineno = 1;
        b->yy_bs_column = 0;
    पूर्ण

        b->yy_is_पूर्णांकeractive = 0;
    
	त्रुटि_सं = oत्रुटि_सं;
पूर्ण

/** Discard all buffered अक्षरacters. On the next scan, YY_INPUT will be called.
 * @param b the buffer state to be flushed, usually @c YY_CURRENT_BUFFER.
 * 
 */
    व्योम zconf_flush_buffer (YY_BUFFER_STATE  b )
अणु
    	अगर ( ! b )
		वापस;

	b->yy_n_अक्षरs = 0;

	/* We always need two end-of-buffer अक्षरacters.  The first causes
	 * a transition to the end-of-buffer state.  The second causes
	 * a jam in that state.
	 */
	b->yy_ch_buf[0] = YY_END_OF_BUFFER_CHAR;
	b->yy_ch_buf[1] = YY_END_OF_BUFFER_CHAR;

	b->yy_buf_pos = &b->yy_ch_buf[0];

	b->yy_at_bol = 1;
	b->yy_buffer_status = YY_BUFFER_NEW;

	अगर ( b == YY_CURRENT_BUFFER )
		zconf_load_buffer_state( );
पूर्ण

/** Pushes the new state onto the stack. The new state becomes
 *  the current state. This function will allocate the stack
 *  अगर necessary.
 *  @param new_buffer The new state.
 *  
 */
व्योम zconfpush_buffer_state (YY_BUFFER_STATE new_buffer )
अणु
    	अगर (new_buffer == शून्य)
		वापस;

	zconfensure_buffer_stack();

	/* This block is copied from zconf_चयन_to_buffer. */
	अगर ( YY_CURRENT_BUFFER )
		अणु
		/* Flush out inक्रमmation क्रम old buffer. */
		*(yy_c_buf_p) = (yy_hold_अक्षर);
		YY_CURRENT_BUFFER_LVALUE->yy_buf_pos = (yy_c_buf_p);
		YY_CURRENT_BUFFER_LVALUE->yy_n_अक्षरs = (yy_n_अक्षरs);
		पूर्ण

	/* Only push अगर top exists. Otherwise, replace top. */
	अगर (YY_CURRENT_BUFFER)
		(yy_buffer_stack_top)++;
	YY_CURRENT_BUFFER_LVALUE = new_buffer;

	/* copied from zconf_चयन_to_buffer. */
	zconf_load_buffer_state( );
	(yy_did_buffer_चयन_on_eof) = 1;
पूर्ण

/** Removes and deletes the top of the stack, अगर present.
 *  The next element becomes the new top.
 *  
 */
व्योम zconfpop_buffer_state (व्योम)
अणु
    	अगर (!YY_CURRENT_BUFFER)
		वापस;

	zconf_delete_buffer(YY_CURRENT_BUFFER );
	YY_CURRENT_BUFFER_LVALUE = शून्य;
	अगर ((yy_buffer_stack_top) > 0)
		--(yy_buffer_stack_top);

	अगर (YY_CURRENT_BUFFER) अणु
		zconf_load_buffer_state( );
		(yy_did_buffer_चयन_on_eof) = 1;
	पूर्ण
पूर्ण

/* Allocates the stack अगर it करोes not exist.
 *  Guarantees space क्रम at least one push.
 */
अटल व्योम zconfensure_buffer_stack (व्योम)
अणु
	पूर्णांक num_to_alloc;
    
	अगर (!(yy_buffer_stack)) अणु

		/* First allocation is just क्रम 2 elements, since we करोn't know अगर this
		 * scanner will even need a stack. We use 2 instead of 1 to aव्योम an
		 * immediate पुनः_स्मृति on the next call.
         */
		num_to_alloc = 1;
		(yy_buffer_stack) = (काष्ठा yy_buffer_state**)zconfalloc
								(num_to_alloc * माप(काष्ठा yy_buffer_state*)
								);
		अगर ( ! (yy_buffer_stack) )
			YY_FATAL_ERROR( "out of dynamic memory in zconfensure_buffer_stack()" );
								  
		स_रखो((yy_buffer_stack), 0, num_to_alloc * माप(काष्ठा yy_buffer_state*));
				
		(yy_buffer_stack_max) = num_to_alloc;
		(yy_buffer_stack_top) = 0;
		वापस;
	पूर्ण

	अगर ((yy_buffer_stack_top) >= ((yy_buffer_stack_max)) - 1)अणु

		/* Increase the buffer to prepare क्रम a possible push. */
		पूर्णांक grow_size = 8 /* arbitrary grow size */;

		num_to_alloc = (yy_buffer_stack_max) + grow_size;
		(yy_buffer_stack) = (काष्ठा yy_buffer_state**)zconfपुनः_स्मृति
								((yy_buffer_stack),
								num_to_alloc * माप(काष्ठा yy_buffer_state*)
								);
		अगर ( ! (yy_buffer_stack) )
			YY_FATAL_ERROR( "out of dynamic memory in zconfensure_buffer_stack()" );

		/* zero only the new slots.*/
		स_रखो((yy_buffer_stack) + (yy_buffer_stack_max), 0, grow_size * माप(काष्ठा yy_buffer_state*));
		(yy_buffer_stack_max) = num_to_alloc;
	पूर्ण
पूर्ण

/** Setup the input buffer state to scan directly from a user-specअगरied अक्षरacter buffer.
 * @param base the अक्षरacter buffer
 * @param size the size in bytes of the अक्षरacter buffer
 * 
 * @वापस the newly allocated buffer state object. 
 */
YY_BUFFER_STATE zconf_scan_buffer  (अक्षर * base, yy_माप_प्रकार  size )
अणु
	YY_BUFFER_STATE b;
    
	अगर ( size < 2 ||
	     base[size-2] != YY_END_OF_BUFFER_CHAR ||
	     base[size-1] != YY_END_OF_BUFFER_CHAR )
		/* They क्रमgot to leave room क्रम the EOB's. */
		वापस 0;

	b = (YY_BUFFER_STATE) zconfalloc(माप( काष्ठा yy_buffer_state )  );
	अगर ( ! b )
		YY_FATAL_ERROR( "out of dynamic memory in zconf_scan_buffer()" );

	b->yy_buf_size = size - 2;	/* "- 2" to take care of EOB's */
	b->yy_buf_pos = b->yy_ch_buf = base;
	b->yy_is_our_buffer = 0;
	b->yy_input_file = 0;
	b->yy_n_अक्षरs = b->yy_buf_size;
	b->yy_is_पूर्णांकeractive = 0;
	b->yy_at_bol = 1;
	b->yy_fill_buffer = 0;
	b->yy_buffer_status = YY_BUFFER_NEW;

	zconf_चयन_to_buffer(b  );

	वापस b;
पूर्ण

/** Setup the input buffer state to scan a string. The next call to zconflex() will
 * scan from a @e copy of @a str.
 * @param yystr a NUL-terminated string to scan
 * 
 * @वापस the newly allocated buffer state object.
 * @note If you want to scan bytes that may contain NUL values, then use
 *       zconf_scan_bytes() instead.
 */
YY_BUFFER_STATE zconf_scan_string (yyस्थिर अक्षर * yystr )
अणु
    
	वापस zconf_scan_bytes(yystr,म_माप(yystr) );
पूर्ण

/** Setup the input buffer state to scan the given bytes. The next call to zconflex() will
 * scan from a @e copy of @a bytes.
 * @param yybytes the byte buffer to scan
 * @param _yybytes_len the number of bytes in the buffer poपूर्णांकed to by @a bytes.
 * 
 * @वापस the newly allocated buffer state object.
 */
YY_BUFFER_STATE zconf_scan_bytes  (yyस्थिर अक्षर * yybytes, पूर्णांक  _yybytes_len )
अणु
	YY_BUFFER_STATE b;
	अक्षर *buf;
	yy_माप_प्रकार n;
	पूर्णांक i;
    
	/* Get memory क्रम full buffer, including space क्रम trailing EOB's. */
	n = _yybytes_len + 2;
	buf = (अक्षर *) zconfalloc(n  );
	अगर ( ! buf )
		YY_FATAL_ERROR( "out of dynamic memory in zconf_scan_bytes()" );

	क्रम ( i = 0; i < _yybytes_len; ++i )
		buf[i] = yybytes[i];

	buf[_yybytes_len] = buf[_yybytes_len+1] = YY_END_OF_BUFFER_CHAR;

	b = zconf_scan_buffer(buf,n );
	अगर ( ! b )
		YY_FATAL_ERROR( "bad buffer in zconf_scan_bytes()" );

	/* It's okay to grow etc. this buffer, and we should throw it
	 * away when we're करोne.
	 */
	b->yy_is_our_buffer = 1;

	वापस b;
पूर्ण

#अगर_अघोषित YY_निकास_त्रुटि
#घोषणा YY_निकास_त्रुटि 2
#पूर्ण_अगर

अटल व्योम yy_fatal_error (yyस्थिर अक्षर* msg )
अणु
    	(व्योम) ख_लिखो( मानक_त्रुटि, "%s\n", msg );
	निकास( YY_निकास_त्रुटि );
पूर्ण

/* Redefine yyless() so it works in section 3 code. */

#अघोषित yyless
#घोषणा yyless(n) \
	करो \
		अणु \
		/* Unकरो effects of setting up zconftext. */ \
        पूर्णांक yyless_macro_arg = (n); \
        YY_LESS_LINENO(yyless_macro_arg);\
		zconftext[zconfleng] = (yy_hold_अक्षर); \
		(yy_c_buf_p) = zconftext + yyless_macro_arg; \
		(yy_hold_अक्षर) = *(yy_c_buf_p); \
		*(yy_c_buf_p) = '\0'; \
		zconfleng = yyless_macro_arg; \
		पूर्ण \
	जबतक ( 0 )

/* Accessor  methods (get/set functions) to काष्ठा members. */

/** Get the current line number.
 * 
 */
पूर्णांक zconfget_lineno  (व्योम)
अणु
        
    वापस zconflineno;
पूर्ण

/** Get the input stream.
 * 
 */
खाता *zconfget_in  (व्योम)
अणु
        वापस zconfin;
पूर्ण

/** Get the output stream.
 * 
 */
खाता *zconfget_out  (व्योम)
अणु
        वापस zconfout;
पूर्ण

/** Get the length of the current token.
 * 
 */
पूर्णांक zconfget_leng  (व्योम)
अणु
        वापस zconfleng;
पूर्ण

/** Get the current token.
 * 
 */

अक्षर *zconfget_text  (व्योम)
अणु
        वापस zconftext;
पूर्ण

/** Set the current line number.
 * @param line_number
 * 
 */
व्योम zconfset_lineno (पूर्णांक  line_number )
अणु
    
    zconflineno = line_number;
पूर्ण

/** Set the input stream. This करोes not discard the current
 * input buffer.
 * @param in_str A पढ़ोable stream.
 * 
 * @see zconf_चयन_to_buffer
 */
व्योम zconfset_in (खाता *  in_str )
अणु
        zconfin = in_str ;
पूर्ण

व्योम zconfset_out (खाता *  out_str )
अणु
        zconfout = out_str ;
पूर्ण

पूर्णांक zconfget_debug  (व्योम)
अणु
        वापस zconf_flex_debug;
पूर्ण

व्योम zconfset_debug (पूर्णांक  bdebug )
अणु
        zconf_flex_debug = bdebug ;
पूर्ण

अटल पूर्णांक yy_init_globals (व्योम)
अणु
        /* Initialization is the same as क्रम the non-reentrant scanner.
     * This function is called from zconflex_destroy(), so करोn't allocate here.
     */

    (yy_buffer_stack) = 0;
    (yy_buffer_stack_top) = 0;
    (yy_buffer_stack_max) = 0;
    (yy_c_buf_p) = (अक्षर *) 0;
    (yy_init) = 0;
    (yy_start) = 0;

/* Defined in मुख्य.c */
#अगर_घोषित YY_STDINIT
    zconfin = मानक_निवेश;
    zconfout = मानक_निकास;
#अन्यथा
    zconfin = (खाता *) 0;
    zconfout = (खाता *) 0;
#पूर्ण_अगर

    /* For future reference: Set त्रुटि_सं on error, since we are called by
     * zconflex_init()
     */
    वापस 0;
पूर्ण

/* zconflex_destroy is क्रम both reentrant and non-reentrant scanners. */
पूर्णांक zconflex_destroy  (व्योम)
अणु
    
    /* Pop the buffer stack, destroying each element. */
	जबतक(YY_CURRENT_BUFFER)अणु
		zconf_delete_buffer(YY_CURRENT_BUFFER  );
		YY_CURRENT_BUFFER_LVALUE = शून्य;
		zconfpop_buffer_state();
	पूर्ण

	/* Destroy the stack itself. */
	zconfमुक्त((yy_buffer_stack) );
	(yy_buffer_stack) = शून्य;

    /* Reset the globals. This is important in a non-reentrant scanner so the next समय
     * zconflex() is called, initialization will occur. */
    yy_init_globals( );

    वापस 0;
पूर्ण

/*
 * Internal utility routines.
 */

#अगर_अघोषित yytext_ptr
अटल व्योम yy_flex_म_नकलन (अक्षर* s1, yyस्थिर अक्षर * s2, पूर्णांक n )
अणु
	रेजिस्टर पूर्णांक i;
	क्रम ( i = 0; i < n; ++i )
		s1[i] = s2[i];
पूर्ण
#पूर्ण_अगर

#अगर_घोषित YY_NEED_STRLEN
अटल पूर्णांक yy_flex_म_माप (yyस्थिर अक्षर * s )
अणु
	रेजिस्टर पूर्णांक n;
	क्रम ( n = 0; s[n]; ++n )
		;

	वापस n;
पूर्ण
#पूर्ण_अगर

व्योम *zconfalloc (yy_माप_प्रकार  size )
अणु
	वापस (व्योम *) दो_स्मृति( size );
पूर्ण

व्योम *zconfपुनः_स्मृति  (व्योम * ptr, yy_माप_प्रकार  size )
अणु
	/* The cast to (अक्षर *) in the following accommodates both
	 * implementations that use अक्षर* generic poपूर्णांकers, and those
	 * that use व्योम* generic poपूर्णांकers.  It works with the latter
	 * because both ANSI C and C++ allow castless assignment from
	 * any poपूर्णांकer type to व्योम*, and deal with argument conversions
	 * as though करोing an assignment.
	 */
	वापस (व्योम *) पुनः_स्मृति( (अक्षर *) ptr, size );
पूर्ण

व्योम zconfमुक्त (व्योम * ptr )
अणु
	मुक्त( (अक्षर *) ptr );	/* see zconfपुनः_स्मृति() क्रम (अक्षर *) cast */
पूर्ण

#घोषणा YYTABLES_NAME "yytables"

व्योम zconf_starthelp(व्योम)
अणु
	new_string();
	last_ts = first_ts = 0;
	BEGIN(HELP);
पूर्ण

अटल व्योम zconf_endhelp(व्योम)
अणु
	zconflval.string = text;
	BEGIN(INITIAL);
पूर्ण

/*
 * Try to खोलो specअगरied file with following names:
 * ./name
 * $(srctree)/name
 * The latter is used when srctree is separate from objtree
 * when compiling the kernel.
 * Return शून्य अगर file is not found.
 */
खाता *zconf_ख_खोलो(स्थिर अक्षर *name)
अणु
	अक्षर *env, fullname[PATH_MAX+1];
	खाता *f;

	f = ख_खोलो(name, "r");
	अगर (!f && name != शून्य && name[0] != '/') अणु
		env = दो_पर्या(SRCTREE);
		अगर (env) अणु
			प्र_लिखो(fullname, "%s/%s", env, name);
			f = ख_खोलो(fullname, "r");
		पूर्ण
	पूर्ण
	वापस f;
पूर्ण

व्योम zconf_initscan(स्थिर अक्षर *name)
अणु
	zconfin = zconf_ख_खोलो(name);
	अगर (!zconfin) अणु
		म_लिखो("can't find file %s\n", name);
		निकास(1);
	पूर्ण

	current_buf = दो_स्मृति(माप(*current_buf));
	स_रखो(current_buf, 0, माप(*current_buf));

	current_file = file_lookup(name);
	current_file->lineno = 1;
	current_file->flags = खाता_BUSY;
पूर्ण

व्योम zconf_nextfile(स्थिर अक्षर *name)
अणु
	काष्ठा file *file = file_lookup(name);
	काष्ठा buffer *buf = दो_स्मृति(माप(*buf));
	स_रखो(buf, 0, माप(*buf));

	current_buf->state = YY_CURRENT_BUFFER;
	zconfin = zconf_ख_खोलो(file->name);
	अगर (!zconfin) अणु
		म_लिखो("%s:%d: can't open file \"%s\"\n",
		    zconf_curname(), zconf_lineno(), file->name);
		निकास(1);
	पूर्ण
	zconf_चयन_to_buffer(zconf_create_buffer(zconfin,YY_BUF_SIZE));
	buf->parent = current_buf;
	current_buf = buf;

	अगर (file->flags & खाता_BUSY) अणु
		म_लिखो("%s:%d: do not source '%s' from itself\n",
		       zconf_curname(), zconf_lineno(), name);
		निकास(1);
	पूर्ण
	अगर (file->flags & खाता_SCANNED) अणु
		म_लिखो("%s:%d: file '%s' is already sourced from '%s'\n",
		       zconf_curname(), zconf_lineno(), name,
		       file->parent->name);
		निकास(1);
	पूर्ण
	file->flags |= खाता_BUSY;
	file->lineno = 1;
	file->parent = current_file;
	current_file = file;
पूर्ण

अटल व्योम zconf_endfile(व्योम)
अणु
	काष्ठा buffer *parent;

	current_file->flags |= खाता_SCANNED;
	current_file->flags &= ~खाता_BUSY;
	current_file = current_file->parent;

	parent = current_buf->parent;
	अगर (parent) अणु
		ख_बंद(zconfin);
		zconf_delete_buffer(YY_CURRENT_BUFFER);
		zconf_चयन_to_buffer(parent->state);
	पूर्ण
	मुक्त(current_buf);
	current_buf = parent;
पूर्ण

पूर्णांक zconf_lineno(व्योम)
अणु
	वापस current_pos.lineno;
पूर्ण

स्थिर अक्षर *zconf_curname(व्योम)
अणु
	वापस current_pos.file ? current_pos.file->name : "<none>";
पूर्ण

