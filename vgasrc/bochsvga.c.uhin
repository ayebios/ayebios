<शैली गुरु>
// Bochs VGA पूर्णांकerface to extended "VBE" modes
//
// Copyright (C) 2012  Kevin O'Connor <kevin@koconnor.net>
// Copyright (C) 2011  Julian Pidancet <julian.pidancet@citrix.com>
//  Copyright (C) 2002 Jeroen Janssen
//
// This file may be distributed under the terms of the GNU LGPLv3 license.

#समावेश "biosvar.h" // GET_GLOBAL
#समावेश "bochsvga.h" // bochsvga_set_mode
#समावेश "config.h" // CONFIG_*
#समावेश "hw/pci.h" // pci_config_पढ़ोl
#समावेश "hw/pci_regs.h" // PCI_BASE_ADDRESS_0
#समावेश "output.h" // dम_लिखो
#समावेश "std/vbe.h" // VBE_CAPABILITY_8BIT_DAC
#समावेश "stdvga.h" // stdvga_get_linelength
#समावेश "vgabios.h" // SET_VGA
#समावेश "vgautil.h" // VBE_total_memory
#समावेश "x86.h" // outw


/****************************************************************
 * Mode tables
 ****************************************************************/

#समावेश "svgamodes.h"

अटल पूर्णांक dispi_found VAR16 = 0;

अटल पूर्णांक is_bochsvga_mode(काष्ठा vgamode_s *vmode_g)
अणु
    अचिन्हित पूर्णांक mcount = GET_GLOBAL(svga_mcount);

    वापस (vmode_g >= &svga_modes[0].info
            && vmode_g <= &svga_modes[mcount-1].info);
पूर्ण

काष्ठा vgamode_s *bochsvga_find_mode(पूर्णांक mode)
अणु
    काष्ठा generic_svga_mode *m = svga_modes;
    अचिन्हित पूर्णांक mcount = GET_GLOBAL(svga_mcount);

    अगर (GET_GLOBAL(dispi_found))
        क्रम (; m < &svga_modes[mcount]; m++)
            अगर (GET_GLOBAL(m->mode) == mode)
                वापस &m->info;
    वापस stdvga_find_mode(mode);
पूर्ण

व्योम
bochsvga_list_modes(u16 seg, u16 *dest, u16 *last)
अणु
    काष्ठा generic_svga_mode *m = svga_modes;
    अचिन्हित पूर्णांक mcount = GET_GLOBAL(svga_mcount);

    अगर (GET_GLOBAL(dispi_found)) अणु
        क्रम (; m < &svga_modes[mcount] && dest<last; m++) अणु
            u16 mode = GET_GLOBAL(m->mode);
            अगर (mode == 0xffff)
                जारी;
            SET_FARVAR(seg, *dest, mode);
            dest++;
        पूर्ण
    पूर्ण
    stdvga_list_modes(seg, dest, last);
पूर्ण


/****************************************************************
 * Helper functions
 ****************************************************************/

अटल अंतरभूत u16 dispi_पढ़ो(u16 reg)
अणु
    outw(reg, VBE_DISPI_IOPORT_INDEX);
    वापस inw(VBE_DISPI_IOPORT_DATA);
पूर्ण
अटल अंतरभूत व्योम dispi_ग_लिखो(u16 reg, u16 val)
अणु
    outw(reg, VBE_DISPI_IOPORT_INDEX);
    outw(val, VBE_DISPI_IOPORT_DATA);
पूर्ण

अटल u8
bochsvga_dispi_enabled(व्योम)
अणु
    अगर (!GET_GLOBAL(dispi_found))
        वापस 0;
    u16 en = dispi_पढ़ो(VBE_DISPI_INDEX_ENABLE);
    अगर (!(en & VBE_DISPI_ENABLED))
        वापस 0;
    वापस 1;
पूर्ण

पूर्णांक
bochsvga_get_winकरोw(काष्ठा vgamode_s *vmode_g, पूर्णांक winकरोw)
अणु
    अगर (!bochsvga_dispi_enabled())
        वापस stdvga_get_winकरोw(vmode_g, winकरोw);
    अगर (winकरोw != 0)
        वापस -1;
    वापस dispi_पढ़ो(VBE_DISPI_INDEX_BANK);
पूर्ण

पूर्णांक
bochsvga_set_winकरोw(काष्ठा vgamode_s *vmode_g, पूर्णांक winकरोw, पूर्णांक val)
अणु
    अगर (!bochsvga_dispi_enabled())
        वापस stdvga_set_winकरोw(vmode_g, winकरोw, val);
    अगर (winकरोw != 0)
        वापस -1;
    dispi_ग_लिखो(VBE_DISPI_INDEX_BANK, val);
    अगर (dispi_पढ़ो(VBE_DISPI_INDEX_BANK) != val)
        वापस -1;
    वापस 0;
पूर्ण

पूर्णांक
bochsvga_get_linelength(काष्ठा vgamode_s *vmode_g)
अणु
    अगर (!bochsvga_dispi_enabled())
        वापस stdvga_get_linelength(vmode_g);
    वापस dispi_पढ़ो(VBE_DISPI_INDEX_VIRT_WIDTH) * vga_bpp(vmode_g) / 8;
पूर्ण

पूर्णांक
bochsvga_set_linelength(काष्ठा vgamode_s *vmode_g, पूर्णांक val)
अणु
    stdvga_set_linelength(vmode_g, val);
    अगर (bochsvga_dispi_enabled()) अणु
        पूर्णांक pixels = (val * 8) / vga_bpp(vmode_g);
        dispi_ग_लिखो(VBE_DISPI_INDEX_VIRT_WIDTH, pixels);
    पूर्ण
    वापस 0;
पूर्ण

पूर्णांक
bochsvga_get_displaystart(काष्ठा vgamode_s *vmode_g)
अणु
    अगर (!bochsvga_dispi_enabled())
        वापस stdvga_get_displaystart(vmode_g);
    पूर्णांक bpp = vga_bpp(vmode_g);
    पूर्णांक linelength = dispi_पढ़ो(VBE_DISPI_INDEX_VIRT_WIDTH) * bpp / 8;
    पूर्णांक x = dispi_पढ़ो(VBE_DISPI_INDEX_X_OFFSET);
    पूर्णांक y = dispi_पढ़ो(VBE_DISPI_INDEX_Y_OFFSET);
    वापस x * bpp / 8 + linelength * y;
पूर्ण

पूर्णांक
bochsvga_set_displaystart(काष्ठा vgamode_s *vmode_g, पूर्णांक val)
अणु
    stdvga_set_displaystart(vmode_g, val);
    अगर (bochsvga_dispi_enabled()) अणु
        पूर्णांक bpp = vga_bpp(vmode_g);
        पूर्णांक linelength = dispi_पढ़ो(VBE_DISPI_INDEX_VIRT_WIDTH) * bpp / 8;
        अगर (!linelength)
            वापस 0;
        dispi_ग_लिखो(VBE_DISPI_INDEX_X_OFFSET, (val % linelength) * 8 / bpp);
        dispi_ग_लिखो(VBE_DISPI_INDEX_Y_OFFSET, val / linelength);
    पूर्ण
    वापस 0;
पूर्ण

पूर्णांक
bochsvga_get_dacक्रमmat(काष्ठा vgamode_s *vmode_g)
अणु
    अगर (!bochsvga_dispi_enabled())
        वापस stdvga_get_dacक्रमmat(vmode_g);
    u16 en = dispi_पढ़ो(VBE_DISPI_INDEX_ENABLE);
    वापस (en & VBE_DISPI_8BIT_DAC) ? 8 : 6;
पूर्ण

पूर्णांक
bochsvga_set_dacक्रमmat(काष्ठा vgamode_s *vmode_g, पूर्णांक val)
अणु
    अगर (!bochsvga_dispi_enabled())
        वापस stdvga_set_dacक्रमmat(vmode_g, val);
    u16 en = dispi_पढ़ो(VBE_DISPI_INDEX_ENABLE);
    अगर (val == 6)
        en &= ~VBE_DISPI_8BIT_DAC;
    अन्यथा अगर (val == 8)
        en |= VBE_DISPI_8BIT_DAC;
    अन्यथा
        वापस -1;
    dispi_ग_लिखो(VBE_DISPI_INDEX_ENABLE, en);
    वापस 0;
पूर्ण

अटल पूर्णांक
bochsvga_save_state(u16 seg, u16 *info)
अणु
    u16 en = dispi_पढ़ो(VBE_DISPI_INDEX_ENABLE);
    SET_FARVAR(seg, *info, en);
    info++;
    अगर (!(en & VBE_DISPI_ENABLED))
        वापस 0;
    पूर्णांक i;
    क्रम (i = VBE_DISPI_INDEX_XRES; i <= VBE_DISPI_INDEX_Y_OFFSET; i++)
        अगर (i != VBE_DISPI_INDEX_ENABLE) अणु
            u16 v = dispi_पढ़ो(i);
            SET_FARVAR(seg, *info, v);
            info++;
        पूर्ण
    वापस 0;
पूर्ण

अटल पूर्णांक
bochsvga_restore_state(u16 seg, u16 *info)
अणु
    u16 en = GET_FARVAR(seg, *info);
    info++;
    अगर (!(en & VBE_DISPI_ENABLED)) अणु
        dispi_ग_लिखो(VBE_DISPI_INDEX_ENABLE, en);
        वापस 0;
    पूर्ण
    पूर्णांक i;
    क्रम (i = VBE_DISPI_INDEX_XRES; i <= VBE_DISPI_INDEX_Y_OFFSET; i++)
        अगर (i == VBE_DISPI_INDEX_ENABLE) अणु
            dispi_ग_लिखो(i, en);
        पूर्ण अन्यथा अणु
            dispi_ग_लिखो(i, GET_FARVAR(seg, *info));
            info++;
        पूर्ण
    वापस 0;
पूर्ण

पूर्णांक
bochsvga_save_restore(पूर्णांक cmd, u16 seg, व्योम *data)
अणु
    पूर्णांक ret = stdvga_save_restore(cmd, seg, data);
    अगर (ret < 0 || !(cmd & SR_REGISTERS) || !GET_GLOBAL(dispi_found))
        वापस ret;

    u16 *info = (data + ret);
    अगर (cmd & SR_SAVE)
        bochsvga_save_state(seg, info);
    अगर (cmd & SR_RESTORE)
        bochsvga_restore_state(seg, info);
    वापस ret + (VBE_DISPI_INDEX_Y_OFFSET-VBE_DISPI_INDEX_XRES+1)*माप(u16);
पूर्ण


/****************************************************************
 * Mode setting
 ****************************************************************/

पूर्णांक
bochsvga_set_mode(काष्ठा vgamode_s *vmode_g, पूर्णांक flags)
अणु
    अगर (GET_GLOBAL(dispi_found))
        dispi_ग_लिखो(VBE_DISPI_INDEX_ENABLE, VBE_DISPI_DISABLED);
    अगर (! is_bochsvga_mode(vmode_g))
        वापस stdvga_set_mode(vmode_g, flags);
    अगर (!GET_GLOBAL(dispi_found))
        वापस -1;

    u8 memmodel = GET_GLOBAL(vmode_g->memmodel);
    अगर (memmodel == MM_PLANAR)
        stdvga_set_mode(stdvga_find_mode(0x6a), 0);
    अगर (memmodel == MM_PACKED && !(flags & MF_NOPALETTE))
        stdvga_set_packed_palette();

    dispi_ग_लिखो(VBE_DISPI_INDEX_BPP, GET_GLOBAL(vmode_g->depth));
    u16 width = GET_GLOBAL(vmode_g->width);
    u16 height = GET_GLOBAL(vmode_g->height);
    dispi_ग_लिखो(VBE_DISPI_INDEX_XRES, width);
    dispi_ग_लिखो(VBE_DISPI_INDEX_YRES, height);
    dispi_ग_लिखो(VBE_DISPI_INDEX_BANK, 0);
    u16 bf = ((flags & MF_NOCLEARMEM ? VBE_DISPI_NOCLEARMEM : 0)
              | (flags & MF_LINEARFB ? VBE_DISPI_LFB_ENABLED : 0));
    dispi_ग_लिखो(VBE_DISPI_INDEX_ENABLE, VBE_DISPI_ENABLED | bf);

    /* VGA compat setup */
    u16 crtc_addr = VGAREG_VGA_CRTC_ADDRESS;
    stdvga_crtc_ग_लिखो(crtc_addr, 0x11, 0x00);
    stdvga_crtc_ग_लिखो(crtc_addr, 0x01, width / 8 - 1);
    stdvga_set_linelength(vmode_g, width);
    stdvga_crtc_ग_लिखो(crtc_addr, 0x12, height - 1);
    u8 v = 0;
    अगर ((height - 1) & 0x0100)
        v |= 0x02;
    अगर ((height - 1) & 0x0200)
        v |= 0x40;
    stdvga_crtc_mask(crtc_addr, 0x07, 0x42, v);

    stdvga_crtc_ग_लिखो(crtc_addr, 0x09, 0x00);
    stdvga_crtc_mask(crtc_addr, 0x17, 0x00, 0x03);
    stdvga_attr_mask(0x10, 0x00, 0x01);
    stdvga_grdc_ग_लिखो(0x06, 0x05);
    stdvga_sequ_ग_लिखो(0x02, 0x0f);
    अगर (memmodel != MM_PLANAR) अणु
        stdvga_crtc_mask(crtc_addr, 0x14, 0x00, 0x40);
        stdvga_attr_mask(0x10, 0x00, 0x40);
        stdvga_sequ_mask(0x04, 0x00, 0x08);
        stdvga_grdc_mask(0x05, 0x20, 0x40);
    पूर्ण
    stdvga_attrindex_ग_लिखो(0x20);

    वापस 0;
पूर्ण


/****************************************************************
 * Init
 ****************************************************************/

पूर्णांक
bochsvga_setup(व्योम)
अणु
    पूर्णांक ret = stdvga_setup();
    अगर (ret)
        वापस ret;

    /* Sanity checks */
    dispi_ग_लिखो(VBE_DISPI_INDEX_ID, VBE_DISPI_ID0);
    अगर (dispi_पढ़ो(VBE_DISPI_INDEX_ID) != VBE_DISPI_ID0) अणु
        dम_लिखो(1, "No VBE DISPI interface detected, falling back to stdvga\n");
        वापस 0;
    पूर्ण

    dispi_ग_लिखो(VBE_DISPI_INDEX_ID, VBE_DISPI_ID5);
    SET_VGA(dispi_found, 1);

    अगर (GET_GLOBAL(HaveRunInit))
        वापस 0;

    u32 lfb_addr = VBE_DISPI_LFB_PHYSICAL_ADDRESS;
    u32 io_addr = 0;
    पूर्णांक bdf = GET_GLOBAL(VgaBDF);
    अगर (CONFIG_VGA_PCI && bdf >= 0) अणु
        u16 venकरोr = pci_config_पढ़ोw(bdf, PCI_VENDOR_ID);
        पूर्णांक barid, bar;
        चयन (venकरोr) अणु
        हाल 0x15ad: /* qemu vmware vga */
            barid = 1;
            अवरोध;
        हाल 0x1234: /* stdvga */
            bar = pci_config_पढ़ोl(bdf, PCI_BASE_ADDRESS_2);
            io_addr = bar & PCI_BASE_ADDRESS_IO_MASK;
            barid = 0;
            अवरोध;
        शेष: /* qxl, virtio */
            barid = 0;
            अवरोध;
        पूर्ण
        bar = pci_config_पढ़ोl(bdf, PCI_BASE_ADDRESS_0 + barid * 4);
        lfb_addr = bar & PCI_BASE_ADDRESS_MEM_MASK;
        dम_लिखो(1, "VBE DISPI: bdf %02x:%02x.%x, bar %d\n", pci_bdf_to_bus(bdf)
                , pci_bdf_to_dev(bdf), pci_bdf_to_fn(bdf), barid);
    पूर्ण

    SET_VGA(VBE_framebuffer, lfb_addr);
    u32 totalmem = dispi_पढ़ो(VBE_DISPI_INDEX_VIDEO_MEMORY_64K) * 64 * 1024;
    SET_VGA(VBE_total_memory, totalmem);
    SET_VGA(VBE_win_granularity, 64);
    SET_VGA(VBE_capabilities, VBE_CAPABILITY_8BIT_DAC);

    dम_लिखो(1, "VBE DISPI: lfb_addr=%x, size %d MB\n",
            lfb_addr, totalmem >> 20);

    // Validate modes
    u16 en = dispi_पढ़ो(VBE_DISPI_INDEX_ENABLE);
    dispi_ग_लिखो(VBE_DISPI_INDEX_ENABLE, en | VBE_DISPI_GETCAPS);
    u16 max_xres = dispi_पढ़ो(VBE_DISPI_INDEX_XRES);
    u16 max_bpp = dispi_पढ़ो(VBE_DISPI_INDEX_BPP);
    dispi_ग_लिखो(VBE_DISPI_INDEX_ENABLE, en);
    काष्ठा generic_svga_mode *m = svga_modes;
    अचिन्हित पूर्णांक mcount = GET_GLOBAL(svga_mcount);
    क्रम (; m < &svga_modes[mcount]; m++) अणु
        u16 width = GET_GLOBAL(m->info.width);
        u16 height = GET_GLOBAL(m->info.height);
        u8 depth = GET_GLOBAL(m->info.depth);
        u32 mem = (height * DIV_ROUND_UP(width * vga_bpp(&m->info), 8)
                   * stdvga_vram_ratio(&m->info));

        अगर (width > max_xres || depth > max_bpp || mem > totalmem) अणु
            dम_लिखो(1, "Removing mode %x\n", GET_GLOBAL(m->mode));
            SET_VGA(m->mode, 0xffff);
        पूर्ण
    पूर्ण

    अगर (io_addr) अणु
        पूर्णांक i;
        u8 *edid = (व्योम*)(io_addr);
        क्रम (i = 0; i < माप(VBE_edid); i++)
            SET_VGA(VBE_edid[i], पढ़ोb(edid + i));
    पूर्ण

    वापस 0;
पूर्ण
